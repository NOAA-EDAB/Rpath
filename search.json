[{"path":"https://noaa-edab.github.io/Rpath/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"NOAA Fisheries Open Science Code of Conduct","title":"NOAA Fisheries Open Science Code of Conduct","text":"code conduct developed adapted Atom code conduct October 2021, revised NOAA-NMFS-Brand-Resources June 2024","code":""},{"path":"https://noaa-edab.github.io/Rpath/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"NOAA Fisheries Open Science Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"NOAA Fisheries Open Science Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://noaa-edab.github.io/Rpath/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"NOAA Fisheries Open Science Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"NOAA Fisheries Open Science Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"NOAA Fisheries Open Science Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team. complaints reviewed investigated result response deemed necessary appropriate circumstances. details specific enforcement policies may posted separately.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"NOAA Fisheries Open Science Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing Guidelines","title":"Contributing Guidelines","text":"Pull requests, bug reports, forms contribution welcomed highly encouraged!","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"contents","dir":"","previous_headings":"","what":"Contents","title":"Contributing Guidelines","text":"Code Conduct Asking Questions Opening Issue Bug Reports Issues Feature Requests Submitting Pull Requests Writing Commit Messages Coding Style Certificate Origin Credits guide serves set clear expectations everyone involved project can improve together also creating welcoming space everyone participate. Following guidelines help ensure positive experience contributors maintainers.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"book-code-of-conduct","dir":"","previous_headings":"","what":"üìñ Code of Conduct","title":"Contributing Guidelines","text":"Please review Code Conduct. effect times. expect honored everyone contributes project.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"paperclip-asking-questions","dir":"","previous_headings":"","what":"üìé Asking Questions","title":"Contributing Guidelines","text":"GitHub issues appropriate place debug specific project, reserved filing bugs feature requests.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"inbox_tray-opening-an-issue","dir":"","previous_headings":"","what":"üì• Opening an Issue","title":"Contributing Guidelines","text":"creating issue, check using latest version project. --date, see updating fixes issue first.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"beetle-bug-reports-and-other-issues","dir":"","previous_headings":"üì• Opening an Issue","what":"ü™≤ Bug Reports and Other Issues","title":"Contributing Guidelines","text":"great way contribute project send detailed issue encounter problem. ask please create reprex. always appreciate well-written, thorough bug report. helps us quickly identify fix problem. opening issue, please follow guidelines: Review documentation opening new issue. specific. Describe problem detail. expect happen? actually happened? problem occurred? version library using? version OS running? Provide reproducible example (e.g.¬†reprex) possible, provide minimal, complete, verifiable example reproduces issue. often important part bug report. can provide sample project reproduces issue, even better! Prefer using reactions, comments, simply want ‚Äú+1‚Äù existing issue. Use GitHub-flavored Markdown. Especially put code blocks console outputs backticks (```). improves readability. short, since likely developer, provide ticket like receive. Review documentation opening new issue. open duplicate issue! Search existing issues see issue previously reported. issue exists, comment additional information . may simply note ‚Äúproblem ‚Äù, helps prioritize common problems requests. Fully complete provided issue template. bug report template requests information need quickly efficiently address issue. clear, concise, descriptive. Provide much information can, including steps reproduce, stack traces, compiler errors, library versions, OS versions, screenshots (applicable).","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"tropical_fish-feature-requests","dir":"","previous_headings":"","what":"üê† Feature Requests","title":"Contributing Guidelines","text":"Feature requests welcome! consider requests, guarantee request accepted timeline implementation release. open duplicate feature request. Search existing feature requests first. find feature (one similar) previously requested, comment issue. Fully complete provided issue template. feature request template asks necessary information us begin productive conversation. precise proposed outcome feature relates existing features. Include implementation details.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"repeat-submitting-pull-requests","dir":"","previous_headings":"","what":"üîÅ Submitting Pull Requests","title":"Contributing Guidelines","text":"appreciate pull requests! forking repo creating pull request non-trivial changes, usually best first open issue discuss changes, discuss intended approach solving problem comments existing issue. Note: contributions licensed project‚Äôs license. Guidelines happy pull requests: Communication key success. unsure something, ask! happy help. open channel communication, make sure reach us develop ideas changes working pull request. Smaller better. Submit one pull request per bug fix feature. pull request contain isolated changes pertaining single bug fix feature implementation. refactor reformat code unrelated change. better submit many small pull requests rather single large one. Enormous pull requests take enormous amounts time review, may rejected altogether. Coordinate bigger changes. large non-trivial changes, open issue discuss strategy maintainers. Otherwise, risk lot work nothing! Prioritize understanding cleverness. Write code clearly concisely, please supply comments needed. Remember source code usually gets written read often. Ensure code clear reader. purpose logic obvious reasonably skilled developer, otherwise add comment explains . Follow existing architecture. adding new functionality, try follow existing architecture patterns code base. unsure, ask guidance. Include test coverage. Add unit tests UI tests possible. Follow existing patterns implementing tests. Update example project one exists exercise new functionality added. Add documentation. Document changes code doc comments existing guides. Update CHANGELOG enhancements bug fixes. Include corresponding issue number one exists, GitHub username. Use repo‚Äôs default branch. Branch submit pull request repo‚Äôs default branch. Rpath case dev. Resolve merge conflicts occur. writing comments, use properly constructed sentences, including punctuation. Use spaces, tabs.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"memo-writing-commit-messages","dir":"","previous_headings":"","what":"üìù Writing Commit Messages","title":"Contributing Guidelines","text":"Please write great commit message. Separate subject body blank line Limit subject line 50 characters Capitalize subject line end subject line period Use imperative mood subject line (example: ‚ÄúFix food web issue‚Äù) Wrap body 72 characters Use body explain , (code shows !) applicable, prefix title relevant component name. (examples: ‚Äú[Docs] Fix typo‚Äù, ‚Äú[Profile] Fix missing avatar‚Äù) Link commit message issue fixes, applicable. (example: ‚ÄúFixes #1234‚Äù)","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"nail_care-coding-style","dir":"","previous_headings":"","what":"üíÖ Coding Style","title":"Contributing Guidelines","text":"Consistency important. Following existing style, formatting, naming conventions file modifying overall project. Failure result prolonged review process focus updating superficial aspects code, rather improving functionality performance. example, private properties prefixed underscore _, new ones add prefixed way. , methods named using camelcase, like thisIsMyNewMethod, diverge writing this_is_my_new_method. get idea. doubt, please ask search codebase something similar.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"medal_sports-certificate-of-origin","dir":"","previous_headings":"","what":"üèÖ Certificate of Origin","title":"Contributing Guidelines","text":"Developer‚Äôs Certificate Origin 1.1 making contribution project, certify : contribution created whole part right submit open source license indicated file; contribution based upon previous work , best knowledge, covered appropriate open source license right license submit work modifications, whether created whole part , open source license (unless permitted submit different license), indicated file; contribution provided directly person certified (1), (2) (3) modified . understand agree project contribution public record contribution (including personal information submit , including sign-) maintained indefinitely may redistributed consistent project open source license(s) involved.","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"octopus-thank-you","dir":"","previous_headings":"","what":"üêô Thank You!","title":"Contributing Guidelines","text":"reading , thank ! appreciate interest contributing project. confirm read guide following best possible, include emoji top issue pull request: üêô :octopus:","code":""},{"path":"https://noaa-edab.github.io/Rpath/CONTRIBUTING.html","id":"pray-credits","dir":"","previous_headings":"","what":"üôè Credits","title":"Contributing Guidelines","text":"document inspired @jessesquires.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/ModelSetup.html","id":"setting-up-a-food-web-model","dir":"Articles","previous_headings":"","what":"Setting up a food web model","title":"Set up a food web model","text":"First, install Rpath instructed Getting Started. R package data.table also required run code article.","code":"library(Rpath); library(data.table)"},{"path":"https://noaa-edab.github.io/Rpath/articles/ModelSetup.html","id":"parameter-file-generation","dir":"Articles","previous_headings":"Setting up a food web model","what":"Parameter file generation","title":"Set up a food web model","text":"Unlike GUI based EwE software package, Rpath relies parameter input file. file actually list several different parameter files: model, diet, stanzas, pedigree. Parameter files can created outside R read using read.rpath.params() function. function merge several different flat files R object list type. preferred alternative generate list file populate completely within R. function create.rpath.params() generate Rpath.params list object. ensures correct columns present parameter file. parameter file contains information normally enter input data tabs EwE. 2 necessary pieces information generate parameter file: group names corresponding type. types : living = 0, primary producer = 1, detritus = 2, fleet = 3. model contains multi-stanza groups need 2 additional pieces information: stanza group names (include NA groups stanza) number stanzas per stanza group. REco.params now contains list 4 objects: model, diet, stanzas, pedigree. majority parameters populated NA save logical default vaules (.e., 0.66667 VBGF_d).","code":"# Groups and types for the R Ecosystem  groups <- c('Seabirds', 'Whales', 'Seals', 'JuvRoundfish1', 'AduRoundfish1',              'JuvRoundfish2', 'AduRoundfish2', 'JuvFlatfish1', 'AduFlatfish1',             'JuvFlatfish2', 'AduFlatfish2', 'OtherGroundfish', 'Foragefish1',             'Foragefish2', 'OtherForagefish', 'Megabenthos', 'Shellfish',             'Macrobenthos', 'Zooplankton', 'Phytoplankton', 'Detritus',              'Discards', 'Trawlers', 'Midwater', 'Dredgers')  types  <- c(rep(0, 19), 1, rep(2, 2), rep(3, 3))  stgroups <- c(rep(NA, 3), rep('Roundfish1', 2), rep('Roundfish2', 2),                rep('Flatfish1', 2), rep('Flatfish2', 2), rep(NA, 14))  REco.params <- create.rpath.params(group = groups, type = types, stgroup = stgroups)"},{"path":"https://noaa-edab.github.io/Rpath/articles/ModelSetup.html","id":"model-parameters","dir":"Articles","previous_headings":"Setting up a food web model","what":"Model parameters","title":"Set up a food web model","text":"model parameter list contains biomass, production biomass, consumption biomass, etc. parameters well detrital fate parameters fleet landings discards. Example model list created using create.rpath.param() function parameter lists data tables (exception stanzas list list integer two data tables). Data tables extension classic data frame class. Advantages data tables include simplified indexing eases process populating parameters. example, can add data specific slot fill entire column. Note use operator ‚Äò:=‚Äô assign values. unique data tables data.table. Example assigning specific slot whole column rest columns model list. Example completed model list","code":"# Example of filling specific slots REco.params$model[Group %in% c('Seals', 'Megabenthos'), EE := 0.8]  # Example of filling an entire column biomass <- c(0.0149, 0.454, NA, NA, 1.39, NA, 5.553, NA, 5.766, NA,              0.739, 7.4, 5.1, 4.7, 5.1, NA, 7, 17.4, 23, 10, rep(NA, 5)) REco.params$model[, Biomass := biomass] # Model biomass <- c(0.0149, 0.454, NA, NA, 1.39, NA, 5.553, NA, 5.766, NA,              0.739, 7.4, 5.1, 4.7, 5.1, NA, 7, 17.4, 23, 10, rep(NA, 5))  pb <- c(0.098, 0.031, 0.100, 2.026, 0.42, 2.1, 0.425, 1.5, 0.26, 1.1, 0.18, 0.6,         0.61, 0.65, 1.5, 0.9, 1.3, 7, 39, 240, rep(NA, 5))  qb <- c(76.750, 6.976, 34.455, NA, 2.19, NA, 3.78, NA, 1.44, NA, 1.69,         1.764, 3.52, 5.65, 3.6, 2.984, rep (NA, 9))  REco.params$model[, Biomass := biomass] REco.params$model[, PB := pb] REco.params$model[, QB := qb]  # EE for groups without biomass REco.params$model[Group %in% c('Seals', 'Megabenthos'), EE := 0.8]  # Production to Consumption for those groups without a QB REco.params$model[Group %in% c('Shellfish', 'Zooplankton'), ProdCons:= 0.25] REco.params$model[Group == 'Macrobenthos', ProdCons := 0.35]  # Biomass accumulation and unassimilated consumption REco.params$model[, BioAcc  := c(rep(0, 22), rep(NA, 3))] REco.params$model[, Unassim := c(rep(0.2, 18), 0.4, rep(0, 3), rep(NA, 3))]  # Detrital Fate REco.params$model[, Detritus := c(rep(1, 20), rep(0, 5))] REco.params$model[, Discards := c(rep(0, 22), rep(1, 3))]  # Fisheries # Landings trawl  <- c(rep(0, 4), 0.08, 0, 0.32, 0, 0.09, 0, 0.05, 0.2, rep(0, 10), rep(NA, 3)) mid    <- c(rep(0, 12), 0.3, 0.08, 0.02, rep(0, 7), rep(NA, 3)) dredge <- c(rep(0, 15), 0.1, 0.5, rep(0, 5), rep(NA, 3)) REco.params$model[, Trawlers := trawl] REco.params$model[, Midwater := mid] REco.params$model[, Dredgers := dredge]  # Discards trawl.d  <- c(1e-5, 1e-7, 0.001, 0.001, 0.005, 0.001, 0.009, 0.001, 0.04, 0.001,               0.01, 0.08, 0.001, 0.001, 0.001, rep(0, 7), rep(NA, 3)) mid.d    <- c(rep(0, 2), 0.001, 0.001, 0.01, 0.001, 0.01, rep(0, 4), 0.05, 0.05,               0.01, 0.01, rep(0, 7), rep(NA, 3)) dredge.d <- c(rep(0, 3), 0.001, 0.05, 0.001, 0.05, 0.001, 0.05, 0.001, 0.01, 0.05,               rep(0, 3), 0.09, 0.01, 1e-4, rep(0, 4), rep(NA, 3)) REco.params$model[, Trawlers.disc := trawl.d] REco.params$model[, Midwater.disc := mid.d] REco.params$model[, Dredgers.disc := dredge.d]"},{"path":"https://noaa-edab.github.io/Rpath/articles/ModelSetup.html","id":"stanza-parameters","dir":"Articles","previous_headings":"Setting up a food web model","what":"Stanza Parameters","title":"Set up a food web model","text":"may noticed biomass consumption biomass parameters missing multistanza groups. Similar EwE, Rpath calculates parameters ensure stanza groups support one another (Christensen Walters (2004)). order , need populate stanza list. mentioned earlier, actually list containing 3 things: number stanza groups, stanza group parameters, individual stanza parameters. number stanzas automatically populated. stanza groups need von Bertalanffy growth function specialized K weight 50% maturity divided weight infinity (relative weight maturity). Individual stanzas need first last month species stanza, total mortality (Z) stanza, whether leading stanza. Example Stanza Group Table Example Individual Stanza Parameters final month ultimate stanza can set value. function rpath.stanzas() calculate final month point species reaches 90% Winf. function rpath.stanzas() also add data tables containing weight, number, consumption age stanza group. Table: Completed stanzas table Example StGroup data table Output rpath.stanzas() function can plotted using stanzaplot() function. Example plot using function stanzaplot() StanzaGroup=1 Note: multistanza groups model, run rpath.stanzas().","code":"# Group parameters REco.params$stanzas$stgroups[, VBGF_Ksp := c(0.145, 0.295, 0.0761, 0.112)] REco.params$stanzas$stgroups[, Wmat     := c(0.0769, 0.561, 0.117,  0.321)]  # Individual stanza parameters REco.params$stanzas$stindiv[, First   := c(rep(c(0, 24), 3), 0, 48)] REco.params$stanzas$stindiv[, Last    := c(rep(c(23, 400), 3), 47, 400)] REco.params$stanzas$stindiv[, Z       := c(2.026, 0.42, 2.1, 0.425, 1.5,                                             0.26, 1.1, 0.18)] REco.params$stanzas$stindiv[, Leading := rep(c(F, T), 4)] REco.params <- rpath.stanzas(REco.params) stanzaplot(REco.params, StanzaGroup = 1)"},{"path":"https://noaa-edab.github.io/Rpath/articles/ModelSetup.html","id":"diet-parameters","dir":"Articles","previous_headings":"Setting up a food web model","what":"Diet Parameters","title":"Set up a food web model","text":"data entered diet list data entered diet composition tab EwE. Just within EwE, columns represent predators rows represent prey. Individual diet components can adjusted specifying prey Group variable assigning value predator. example, wanted assign 10% seabird diet ‚ÄòGroundfish‚Äô like : can also assign entire diet composition predator: Example Partial Diet Table completed model parameter file R Ecosystem: Diet parameters R Ecosystem","code":"REco.params$diet[Group == 'OtherGroundfish', Seabirds := 0.1] whale.diet <- c(rep(NA, 3), 0.01, NA, 0.01, NA, 0.01, NA, 0.01, rep(NA, 4), 0.1,                 rep(NA, 3), 0.86, rep(NA, 3), NA) REco.params$diet[, Whales := whale.diet] REco.params$diet[, Seabirds        := c(rep(NA, 11), 0.1, 0.25, 0.2, 0.15,                                          rep(NA, 6), 0.3, NA)] REco.params$diet[, Whales          := c(rep(NA, 3), 0.01, NA, 0.01, NA, 0.01,                                          NA, 0.01, rep(NA, 4), 0.1, rep(NA, 3),                                          0.86, rep(NA, 3), NA)] REco.params$diet[, Seals           := c(rep(NA, 3), 0.05, 0.1, 0.05, 0.2, 0.005,                                          0.05, 0.005, 0.01, 0.24, rep(0.05, 4),                                          0.09, rep(NA, 5), NA)] REco.params$diet[, JuvRoundfish1   := c(rep(NA, 3), rep(c(1e-4, NA), 4), 1e-3,                                          rep(NA, 2), 0.05, 1e-4, NA, .02, 0.7785,                                          0.1, 0.05, NA, NA)] REco.params$diet[, AduRoundfish1   := c(rep(NA, 5), 1e-3, 0.01, 1e-3, 0.05, 1e-3,                                          0.01, 0.29, 0.1, 0.1, 0.347, 0.03, NA,                                          0.05, 0.01, rep(NA, 3), NA)] REco.params$diet[, JuvRoundfish2   := c(rep(NA, 3), rep(c(1e-4, NA), 4), 1e-3,                                          rep(NA, 2), 0.05, 1e-4, NA, .02, 0.7785,                                          0.1, .05, NA, NA)] REco.params$diet[, AduRoundfish2   := c(rep(NA, 3), 1e-4, NA, 1e-4, NA, rep(1e-4, 4),                                          0.1, rep(0.05, 3), 0.2684, 0.01, 0.37, 0.001,                                          NA, 0.1, NA, NA)] REco.params$diet[, JuvFlatfish1    := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 3),                                          rep(1e-4, 2), NA, 0.416, 0.4334, 0.1, 0.05,                                          NA, NA)] REco.params$diet[, AduFlatfish1    := c(rep(NA, 7), rep(1e-4, 5), rep(NA, 2), 0.001,                                          0.05, 0.001, 0.6, 0.2475, NA, 0.1, NA, NA)] REco.params$diet[, JuvFlatfish2    := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 3),                                         rep(1e-4, 2), NA, 0.416, 0.4334, 0.1, 0.05,                                          NA, NA)] REco.params$diet[, AduFlatfish2    := c(rep(NA, 7), 1e-4, NA, 1e-4, rep(NA, 4),                                          rep(1e-4, 3), 0.44, 0.3895, NA, 0.17, NA, NA)] REco.params$diet[, OtherGroundfish := c(rep(NA, 3), rep(1e-4, 8), 0.05, 0.08, 0.0992,                                          0.3, 0.15, 0.01, 0.3, 0.01, rep(NA, 3), NA)] REco.params$diet[, Foragefish1     := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 7),                                          0.8196, 0.06, 0.12, NA, NA)] REco.params$diet[, Foragefish2     := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 7),                                          0.8196, 0.06, 0.12, NA, NA)] REco.params$diet[, OtherForagefish := c(rep(NA, 3), rep(c(1e-4, NA), 4), rep(NA, 7),                                          0.8196, 0.06, 0.12, NA, NA)] REco.params$diet[, Megabenthos     := c(rep(NA, 15), 0.1, 0.03, 0.55, rep(NA, 2), 0.32,                                         NA, NA)] REco.params$diet[, Shellfish       := c(rep(NA, 18), 0.3, 0.5, 0.2, NA, NA)] REco.params$diet[, Macrobenthos    := c(rep(NA, 16), 0.01, rep(0.2, 2), NA, 0.59, NA, NA)] REco.params$diet[, Zooplankton     := c(rep(NA, 18), 0.2, 0.6, 0.2, NA, NA)]"},{"path":"https://noaa-edab.github.io/Rpath/articles/ModelSetup.html","id":"pedigree-parameters","dir":"Articles","previous_headings":"Setting up a food web model","what":"Pedigree parameters","title":"Set up a food web model","text":"Rpath currently use pedigrees. However, future Rpath extensions use . Therefore, include current parameter object. default values 1 (low confidence). defaults changed R Ecosystem can obviously changed similar manner parameter files. Pedigree parameters R Ecosystem","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/Rpath.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Rpath: an open source food web model","text":"necessary, first install remotes() package: install.packages(\"remotes\") experience issues installing package, please use alternative","code":"remotes::install_github(\"noaa-edab/Rpath\",build_vignettes=TRUE)` to install Rpath and the vignettes. pak::pak(\"noaa-edab/Rpath\")"},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/articles/RunRpath.html","id":"running-rpath","dir":"Articles","previous_headings":"","what":"Running Rpath","title":"Create a static food web model in Rpath","text":"following Model Setup steps (vignette(\"ModelSetup\")) creating parameter object, balancing model Rpath relatively straightforward. Simply pass parameter object argument rpath() function. desired, ecosystem name (eco.name) area (eco.area, km^2) ecosystem can attributed model. output object rpath() S3 object type called ‚ÄòRpath‚Äô. Rpath objects list parameters mass balance. However, print function display information ‚ÄúBasic Estimates‚Äù tab EwE. also notice print function display whether model balanced . model balanced, list groups balanced. can also display mortalities associated group supplying argument morts = T print function. Note: wish save print output (.csv .RData file) need use function write.rpath(). function also accept argument morts = T. generic function summary display summary statistics model well list attributes can access. access attributes simply use standard list notation. example, view trophic level information One advantages R graphical ability. Users can feel free develop graphical routines Rpath outputs. However, included basic food web plot. routine can include fisheries, display group numbers names, even highlight particular group.","code":"REco <- rpath(REco.params, eco.name = 'R Ecosystem') REco #> Rpath model: R Ecosystem  #> Model Area: 1  #>      Status: Balanced #>                           Group type       TL      Biomass      PB         QB #> Seabirds               Seabirds    0 3.509004 1.490000e-02   0.098  76.750000 #> Whales                   Whales    0 3.363740 4.540000e-01   0.031   6.976000 #> Seals                     Seals    0 4.494531 2.500000e-02   0.100  34.455000 #> JuvRoundfish1     JuvRoundfish1    0 3.109999 1.304305e-01   2.026   8.413857 #> AduRoundfish1     AduRoundfish1    0 4.289424 1.390000e+00   0.420   2.190000 #> JuvRoundfish2     JuvRoundfish2    0 3.109999 1.232608e+00   2.100  10.936279 #> AduRoundfish2     AduRoundfish2    0 3.768021 5.553000e+00   0.425   3.780000 #> JuvFlatfish1       JuvFlatfish1    0 3.200177 6.988442e-02   1.500   8.007334 #> AduFlatfish1       AduFlatfish1    0 3.367892 5.766000e+00   0.260   1.440000 #> JuvFlatfish2       JuvFlatfish2    0 3.200177 9.628877e-02   1.100   5.843517 #> AduFlatfish2       AduFlatfish2    0 3.182930 7.390000e-01   0.180   1.690000 #> OtherGroundfish OtherGroundfish    0 3.937873 7.400000e+00   0.600   1.764000 #> Foragefish1         Foragefish1    0 3.025362 5.100000e+00   0.610   3.520000 #> Foragefish2         Foragefish2    0 3.025362 4.700000e+00   0.650   5.650000 #> OtherForagefish OtherForagefish    0 3.025362 5.100000e+00   1.500   3.600000 #> Megabenthos         Megabenthos    0 3.122309 1.976538e+01   0.900   2.984000 #> Shellfish             Shellfish    0 2.375000 7.000000e+00   1.300   5.200000 #> Macrobenthos       Macrobenthos    0 2.579687 1.740000e+01   7.000  20.000000 #> Zooplankton         Zooplankton    0 2.250000 2.300000e+01  39.000 156.000000 #> Phytoplankton     Phytoplankton    1 1.000000 1.000000e+01 240.000   0.000000 #> Detritus               Detritus    2 1.000000 3.636667e+03   0.500   0.000000 #> Discards               Discards    2 1.000000 1.218220e+00   0.500   0.000000 #> Trawlers               Trawlers    3 4.768917 0.000000e+00   0.000   0.000000 #> Midwater               Midwater    3 4.149361 0.000000e+00   0.000   0.000000 #> Dredgers               Dredgers    3 3.863316 0.000000e+00   0.000   0.000000 #>                           EE          GE Removals #> Seabirds        6.848377e-03 0.001276873 1.00e-05 #> Whales          7.105301e-06 0.004443807 1.00e-07 #> Seals           8.000000e-01 0.002902336 2.00e-03 #> JuvRoundfish1   3.368028e-01 0.240793243 3.00e-03 #> AduRoundfish1   3.981550e-01 0.191780822 1.45e-01 #> JuvRoundfish2   3.555950e-02 0.192021441 3.00e-03 #> AduRoundfish2   2.512776e-01 0.112433862 3.89e-01 #> JuvFlatfish1    5.078699e-01 0.187328259 2.00e-03 #> AduFlatfish1    2.531474e-01 0.180555556 1.80e-01 #> JuvFlatfish2    5.026385e-01 0.188242784 2.00e-03 #> AduFlatfish2    8.516723e-01 0.106508876 7.00e-02 #> OtherGroundfish 9.799546e-01 0.340136054 3.80e-01 #> Foragefish1     9.894495e-01 0.173295455 3.51e-01 #> Foragefish2     9.858029e-01 0.115044248 9.10e-02 #> OtherForagefish 9.570763e-01 0.416666667 3.10e-02 #> Megabenthos     8.000000e-01 0.301608579 1.90e-01 #> Shellfish       6.797570e-01 0.250000000 5.10e-01 #> Macrobenthos    9.865641e-01 0.350000000 1.00e-04 #> Zooplankton     9.664749e-01 0.250000000 0.00e+00 #> Phytoplankton   9.068092e-01 0.000000000 0.00e+00 #> Detritus        5.282553e-01 0.000000000 0.00e+00 #> Discards        5.632356e-01 0.000000000 0.00e+00 #> Trawlers        0.000000e+00 0.000000000 0.00e+00 #> Midwater        0.000000e+00 0.000000000 0.00e+00 #> Dredgers        0.000000e+00 0.000000000 0.00e+00 print(REco, morts = T)  #> Rpath model: R Ecosystem  #> Model Area: 1  #>      Status: Balanced #>                           Group type      PB           M0   F.Trawlers #> Seabirds               Seabirds    0   0.098  0.097328859 6.711409e-04 #> Whales                   Whales    0   0.031  0.030999780 2.202643e-07 #> Seals                     Seals    0   0.100  0.020000000 4.000000e-02 #> JuvRoundfish1     JuvRoundfish1    0   2.026  1.343637542 7.666919e-03 #> AduRoundfish1     AduRoundfish1    0   0.420  0.252774921 6.115108e-02 #> JuvRoundfish2     JuvRoundfish2    0   2.100  2.025325048 8.112877e-04 #> AduRoundfish2     AduRoundfish2    0   0.425  0.318207030 5.924725e-02 #> JuvFlatfish1       JuvFlatfish1    0   1.500  0.738195163 1.430934e-02 #> AduFlatfish1       AduFlatfish1    0   0.260  0.194181677 2.254596e-02 #> JuvFlatfish2       JuvFlatfish2    0   1.100  0.547097656 1.038543e-02 #> AduFlatfish2       AduFlatfish2    0   0.180  0.026698988 8.119080e-02 #> OtherGroundfish OtherGroundfish    0   0.600  0.012027247 3.783784e-02 #> Foragefish1         Foragefish1    0   0.610  0.006435784 1.960784e-04 #> Foragefish2         Foragefish2    0   0.650  0.009228113 2.127660e-04 #> OtherForagefish OtherForagefish    0   1.500  0.064385523 1.960784e-04 #> Megabenthos         Megabenthos    0   0.900  0.180000000 0.000000e+00 #> Shellfish             Shellfish    0   1.300  0.416315964 0.000000e+00 #> Macrobenthos       Macrobenthos    0   7.000  0.094051032 0.000000e+00 #> Zooplankton         Zooplankton    0  39.000  1.307480577 0.000000e+00 #> Phytoplankton     Phytoplankton    1 240.000 22.365799754 0.000000e+00 #> Detritus               Detritus    2   0.500  0.528255254 0.000000e+00 #> Discards               Discards    2   0.500  0.563235612 0.000000e+00 #>                   F.Midwater   F.Dredgers M2.Seabirds  M2.Whales    M2.Seals #> Seabirds        0.0000000000 0.000000e+00  0.00000000 0.00000000 0.000000000 #> Whales          0.0000000000 0.000000e+00  0.00000000 0.00000000 0.000000000 #> Seals           0.0400000000 0.000000e+00  0.00000000 0.00000000 0.000000000 #> JuvRoundfish1   0.0076669193 7.666919e-03  0.00000000 0.24281931 0.330204629 #> AduRoundfish1   0.0071942446 3.597122e-02  0.00000000 0.00000000 0.061969424 #> JuvRoundfish2   0.0008112877 8.112877e-04  0.00000000 0.02569433 0.034941149 #> AduRoundfish2   0.0018008284 9.004142e-03  0.00000000 0.00000000 0.031023771 #> JuvFlatfish1    0.0000000000 1.430934e-02  0.00000000 0.45319174 0.061628546 #> AduFlatfish1    0.0000000000 8.671523e-03  0.00000000 0.00000000 0.007469433 #> JuvFlatfish2    0.0000000000 1.038543e-02  0.00000000 0.32891728 0.044728736 #> AduFlatfish2    0.0000000000 1.353180e-02  0.00000000 0.00000000 0.011655954 #> OtherGroundfish 0.0067567568 6.756757e-03  0.01545372 0.00000000 0.027936486 #> Foragefish1     0.0686274510 0.000000e+00  0.05605760 0.00000000 0.008444853 #> Foragefish2     0.0191489362 0.000000e+00  0.04866277 0.00000000 0.009163564 #> OtherForagefish 0.0058823529 0.000000e+00  0.03363456 0.06210008 0.008444853 #> Megabenthos     0.0000000000 9.612765e-03  0.00000000 0.00000000 0.002178999 #> Shellfish       0.0000000000 7.285714e-02  0.00000000 0.00000000 0.011074821 #> Macrobenthos    0.0000000000 5.747126e-06  0.00000000 0.00000000 0.000000000 #> Zooplankton     0.0000000000 0.000000e+00  0.00000000 0.11842215 0.000000000 #> Phytoplankton   0.0000000000 0.000000e+00  0.00000000 0.00000000 0.000000000 #> Detritus        0.0000000000 0.000000e+00  0.00000000 0.00000000 0.000000000 #> Discards        0.0000000000 0.000000e+00  0.34307250 0.00000000 0.000000000 #>                 M2.JuvRoundfish1 M2.AduRoundfish1 M2.JuvRoundfish2 #> Seabirds            0.000000e+00      0.000000000     0.000000e+00 #> Whales              0.000000e+00      0.000000000     0.000000e+00 #> Seals               0.000000e+00      0.000000000     0.000000e+00 #> JuvRoundfish1       8.413857e-04      0.000000000     1.033512e-02 #> AduRoundfish1       0.000000e+00      0.000000000     0.000000e+00 #> JuvRoundfish2       8.903262e-05      0.002469641     1.093628e-03 #> AduRoundfish2       0.000000e+00      0.005481902     0.000000e+00 #> JuvFlatfish1        1.570341e-03      0.043559067     1.928920e-02 #> AduFlatfish1        0.000000e+00      0.026396982     0.000000e+00 #> JuvFlatfish2        1.139721e-03      0.031614279     1.399971e-02 #> AduFlatfish2        0.000000e+00      0.041192152     0.000000e+00 #> OtherGroundfish     1.483005e-04      0.119295811     1.821642e-03 #> Foragefish1         0.000000e+00      0.059688235     0.000000e+00 #> Foragefish2         0.000000e+00      0.064768085     0.000000e+00 #> OtherForagefish     1.075905e-02      0.207118176     1.321583e-01 #> Megabenthos         5.552250e-06      0.004620350     6.820079e-05 #> Shellfish           0.000000e+00      0.000000000     0.000000e+00 #> Macrobenthos        1.261406e-03      0.008747414     1.549442e-02 #> Zooplankton         3.714540e-02      0.001323522     4.562737e-01 #> Phytoplankton       1.097423e-02      0.000000000     1.348015e-01 #> Detritus            5.487117e-02      0.000000000     6.740074e-01 #> Discards            0.000000e+00      0.000000000     0.000000e+00 #>                 M2.AduRoundfish2 M2.JuvFlatfish1 M2.AduFlatfish1 #> Seabirds            0.0000000000    0.000000e+00    0.0000000000 #> Whales              0.0000000000    0.000000e+00    0.0000000000 #> Seals               0.0000000000    0.000000e+00    0.0000000000 #> JuvRoundfish1       0.0160931242    4.290315e-04    0.0000000000 #> AduRoundfish1       0.0000000000    0.000000e+00    0.0000000000 #> JuvRoundfish2       0.0017029205    4.539868e-05    0.0000000000 #> AduRoundfish2       0.0000000000    0.000000e+00    0.0000000000 #> JuvFlatfish1        0.0300357949    8.007334e-04    0.0118811037 #> AduFlatfish1        0.0003640364    0.000000e+00    0.0001440000 #> JuvFlatfish2        0.0217993646    5.811559e-04    0.0086230617 #> AduFlatfish2        0.0028403708    0.000000e+00    0.0011235507 #> OtherGroundfish     0.2836532432    0.000000e+00    0.0001122032 #> Foragefish1         0.2057876471    0.000000e+00    0.0000000000 #> Foragefish2         0.2233014894    0.000000e+00    0.0000000000 #> OtherForagefish     0.2057876471    1.097231e-05    0.0016280471 #> Megabenthos         0.2850340406    2.831151e-06    0.0210039937 #> Shellfish           0.0299862000    0.000000e+00    0.0011861486 #> Macrobenthos        0.4463463103    1.337865e-02    0.2863117241 #> Zooplankton         0.0009126235    1.054458e-02    0.0893479304 #> Phytoplankton       0.0000000000    5.595879e-03    0.0000000000 #> Detritus            2.0990340000    2.797939e-02    0.8303040000 #> Discards            0.0000000000    0.000000e+00    0.0000000000 #>                 M2.JuvFlatfish2 M2.AduFlatfish2 M2.OtherGroundfish #> Seabirds           0.000000e+00    0.000000e+00       0.0000000000 #> Whales             0.000000e+00    0.000000e+00       0.0000000000 #> Seals              0.000000e+00    0.000000e+00       0.0000000000 #> JuvRoundfish1      4.313908e-04    0.000000e+00       0.0100080897 #> AduRoundfish1      0.000000e+00    0.000000e+00       0.0009391079 #> JuvRoundfish2      4.564833e-05    0.000000e+00       0.0010590226 #> AduRoundfish2      0.000000e+00    0.000000e+00       0.0002350729 #> JuvFlatfish1       8.051367e-04    1.787108e-03       0.0186788424 #> AduFlatfish1       0.000000e+00    0.000000e+00       0.0002263892 #> JuvFlatfish2       5.843517e-04    1.297046e-03       0.0135567211 #> AduFlatfish2       0.000000e+00    0.000000e+00       0.0017663870 #> OtherGroundfish    0.000000e+00    0.000000e+00       0.0882000000 #> Foragefish1        0.000000e+00    0.000000e+00       0.2047623529 #> Foragefish2        0.000000e+00    0.000000e+00       0.2755142809 #> OtherForagefish    1.103265e-05    2.448843e-05       0.7678588235 #> Megabenthos        2.846720e-06    6.318673e-06       0.0990641013 #> Shellfish          0.000000e+00    1.784157e-05       0.0186480000 #> Macrobenthos       1.345222e-02    3.158163e-02       0.2250620690 #> Zooplankton        1.060257e-02    2.115002e-02       0.0056754783 #> Phytoplankton      5.626651e-03    0.000000e+00       0.0000000000 #> Detritus           2.813326e-02    2.123147e-01       0.0000000000 #> Discards           0.000000e+00    0.000000e+00       0.0000000000 #>                 M2.Foragefish1 M2.Foragefish2 M2.OtherForagefish M2.Megabenthos #> Seabirds           0.000000000    0.000000000        0.000000000       0.000000 #> Whales             0.000000000    0.000000000        0.000000000       0.000000 #> Seals              0.000000000    0.000000000        0.000000000       0.000000 #> JuvRoundfish1      0.013763653    0.020359504        0.014076464       0.000000 #> AduRoundfish1      0.000000000    0.000000000        0.000000000       0.000000 #> JuvRoundfish2      0.001456424    0.002154375        0.001489524       0.000000 #> AduRoundfish2      0.000000000    0.000000000        0.000000000       0.000000 #> JuvFlatfish1       0.025688130    0.037998457        0.026271952       0.000000 #> AduFlatfish1       0.000000000    0.000000000        0.000000000       0.000000 #> JuvFlatfish2       0.018643919    0.027578502        0.019067644       0.000000 #> AduFlatfish2       0.000000000    0.000000000        0.000000000       0.000000 #> OtherGroundfish    0.000000000    0.000000000        0.000000000       0.000000 #> Foragefish1        0.000000000    0.000000000        0.000000000       0.000000 #> Foragefish2        0.000000000    0.000000000        0.000000000       0.000000 #> OtherForagefish    0.000000000    0.000000000        0.000000000       0.000000 #> Megabenthos        0.000000000    0.000000000        0.000000000       0.298400 #> Shellfish          0.000000000    0.000000000        0.000000000       0.252771 #> Macrobenthos       0.000000000    0.000000000        0.000000000       1.864307 #> Zooplankton        0.639715617    0.946281652        0.654254609       0.000000 #> Phytoplankton      0.107712000    0.159330000        0.110160000       0.000000 #> Detritus           2.154240000    3.186600000        2.203200000      18.873570 #> Discards           0.000000000    0.000000000        0.000000000       0.000000 #>                 M2.Shellfish M2.Macrobenthos M2.Zooplankton M2.Phytoplankton #> Seabirds           0.0000000       0.0000000           0.00                0 #> Whales             0.0000000       0.0000000           0.00                0 #> Seals              0.0000000       0.0000000           0.00                0 #> JuvRoundfish1      0.0000000       0.0000000           0.00                0 #> AduRoundfish1      0.0000000       0.0000000           0.00                0 #> JuvRoundfish2      0.0000000       0.0000000           0.00                0 #> AduRoundfish2      0.0000000       0.0000000           0.00                0 #> JuvFlatfish1       0.0000000       0.0000000           0.00                0 #> AduFlatfish1       0.0000000       0.0000000           0.00                0 #> JuvFlatfish2       0.0000000       0.0000000           0.00                0 #> AduFlatfish2       0.0000000       0.0000000           0.00                0 #> OtherGroundfish    0.0000000       0.0000000           0.00                0 #> Foragefish1        0.0000000       0.0000000           0.00                0 #> Foragefish2        0.0000000       0.0000000           0.00                0 #> OtherForagefish    0.0000000       0.0000000           0.00                0 #> Megabenthos        0.0000000       0.0000000           0.00                0 #> Shellfish          0.0000000       0.4971429           0.00                0 #> Macrobenthos       0.0000000       4.0000000           0.00                0 #> Zooplankton        0.4747826       3.0260870          31.20                0 #> Phytoplankton      1.8200000       0.0000000         215.28                0 #> Detritus           7.2800000     205.3200000         717.60                0 #> Discards           0.0000000       0.0000000           0.00                0 summary(REco) #> Rpath model: R Ecosystem  #>      Status: Balanced #>  #> Summary Statistics: #>   NumGroups NumLiving NumDetritus NumFleets TotBiomass TotLandings #> 1        25        20           2         3   104.9365        1.74 #>  #> Rpath model also includes: #>  [1] \"NUM_GROUPS\" \"NUM_LIVING\" \"NUM_DEAD\"   \"NUM_GEARS\"  \"Group\"      #>  [6] \"type\"       \"TL\"         \"Biomass\"    \"PB\"         \"QB\"         #> [11] \"EE\"         \"BA\"         \"Unassim\"    \"GE\"         \"DC\"         #> [16] \"DetFate\"    \"Landings\"   \"Discards\" REco$TL #>        Seabirds          Whales           Seals   JuvRoundfish1   AduRoundfish1  #>        3.509004        3.363740        4.494531        3.109999        4.289424  #>   JuvRoundfish2   AduRoundfish2    JuvFlatfish1    AduFlatfish1    JuvFlatfish2  #>        3.109999        3.768021        3.200177        3.367892        3.200177  #>    AduFlatfish2 OtherGroundfish     Foragefish1     Foragefish2 OtherForagefish  #>        3.182930        3.937873        3.025362        3.025362        3.025362  #>     Megabenthos       Shellfish    Macrobenthos     Zooplankton   Phytoplankton  #>        3.122309        2.375000        2.579687        2.250000        1.000000  #>        Detritus        Discards        Trawlers        Midwater        Dredgers  #>        1.000000        1.000000        4.768917        4.149361        3.863316 webplot(REco) webplot(REco, labels = T) webplot(REco, fleets = T, highlight = 'AduRoundfish1')"},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"unit-tests","dir":"Articles","previous_headings":"","what":"Unit Tests","title":"UnitTests","text":"Unit Tests written using testthat R package. tests stored file: tests/testthat/test-rpath.R. may run explicitly user clicking Test Check buttons Build tab RStudio. also run automatically via git actions user push pull request. output unit tests pdf file variety comparison plots, examples given Figures 1-3.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"details","dir":"Articles","previous_headings":"","what":"Details","title":"UnitTests","text":"Unit Tests consist comparing ‚Äúcurrent‚Äù model value (.e., string, table) previously stored ‚Äúbaseline‚Äù value. Differences shown testing output well reflected generated plots written : Rplots.pdf. Difference ‚Äútolerances‚Äù defined variable: can modified necessary.","code":"TOLERANCE <- 1e-5"},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"regenerating-baseline-files","dir":"Articles","previous_headings":"Details","what":"Regenerating Baseline Files","title":"UnitTests","text":"user needs regenerate baseline files, following variable set TRUE tests re-run manually (clicking Test button Build tab). regenerate baseline data files. baseline files generated, user reset variable back:","code":"CREATE_BASELINE_FILES <- TRUE CREATE_BASELINE_FILES <- FALSE"},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"list-of-tests","dir":"Articles","previous_headings":"","what":"List of Tests","title":"UnitTests","text":"following unit tests developed. Note tests consist additional/finer tests compare out_Biomass, out_Catch, out_Gear_Catch* AB (Adams-Bashforth) RK4 (4th Order Runge Kutta) numerical differential equation methods.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"unit-tests-1","dir":"Articles","previous_headings":"List of Tests","what":"Unit Tests","title":"UnitTests","text":"model balanced? Looks ‚ÄúBalanced‚Äù string Rpath summary file output model run silent? Tests model runs without producing print statements, warnings, error messages. Compare REcosystem objects current REcosystem object saved original REcosystem object? Compare REcosystem summaries current REcosystem summary saved original REcosystem summary?","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"ab-and-rk4-sim-run-tests","dir":"Articles","previous_headings":"List of Tests > Unit Tests","what":"AB and RK4 Sim Run Tests:","title":"UnitTests","text":"Compare baseline AB sim run current AB sim run Checks baseline Rpath AB sim run current AB sim run (checks top level data structure ). Compare out_Biomass baseline current AB sim runs Checks OutBiomass baseline AB sim run current AB sim run. Compare out_Catch baseline current AB sim runs Checks OutCatch baseline AB sim run current AB sim run. Compare out_Gear_Catch* baseline current AB sim runs Checks OutGearCatch baseline AB sim run current AB sim run. Compare baseline RK4 sim run current RK4 sim run Checks baseline RK4 sim run current RK4 sim run (checks top level data structure ). Compare out_Biomass baseline current RK4 sim runs Checks OutBiomass baseline RK4 sim run current RK4 sim run. Compare out_Catch baseline current RK4 sim runs Checks OutCatch baseline RK4 sim run current RK4 sim run. Compare out_Gear_Catch baseline current RK4 sim runs Checks OutGearCatch baseline RK4 sim run current RK4 sim run. Compare baseline AB sim run current RK4 sim run Checks baseline AB sim run current RK4 sim run (checks top level data structure ). Compare out_Biomass baseline AB run current RK4 sim run Checks OutBiomass baseline AB sim run current RK4 sim run. Compare out_Catch baseline AB run current RK4 sim run Checks OutCatch baseline AB sim run current RK4 sim run. Compare out_Gear_Catch baseline AB run current RK4 sim run Checks OutGearCatch baseline AB sim run current RK4 sim run.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"ab-and-rk4-sim-run-tests-with-jitter-on-forcedbiomass","dir":"Articles","previous_headings":"List of Tests > Unit Tests","what":"AB and RK4 Sim Run Tests with Jitter on ForcedBiomass:","title":"UnitTests","text":"Compare sim runs random noise (.e., jitter) added $forcing$ForcedBio Checks outBiomass baseline AB sim run current AB sim run random noise added ForcedBio. Compare out_Catch baseline AB run current AB run random noise added ForcedBio Checks outCatch baseline AB sim run current AB sim run random noise added ForcedBio. Compare out_Gear_Catch baseline AB run current AB run random noise added ForcedBio Checks outGearCatch baseline AB sim run current AB sim run random noise added ForcedBio. Compare out_Biomass baseline RK4 run current RK4 run random noise added ForcedBio Checks outBiomass baseline RK4 sim run current RK4 sim run random noise added ForcedBio. Compare out_Catch baseline RK4 run current RK4 run random noise added ForcedBio Checks outCatch baseline RK4 sim run current RK4 sim run random noise added ForcedBio. Compare out_Gear_Catch baseline RK4 run current RK4 run random noise added ForcedBio Checks outGearCatch baseline RK4 sim run current RK4 sim run random noise added ForcedBio.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"ab-and-rk4-sim-run-tests-with-jitter-on-forcedmigrate","dir":"Articles","previous_headings":"List of Tests > Unit Tests","what":"AB and RK4 Sim Run Tests with Jitter on ForcedMigrate:","title":"UnitTests","text":"Compare out_Biomass baseline AB run current AB run random noise added ForcedMigrate Checks outBiomass baseline AB sim run current AB sim run random noise added ForcedMigrate. Compare out_Catch baseline AB run current AB run random noise added ForcedMigrate Checks outCatch baseline AB sim run current AB sim run random noise added ForcedMigrate. Compare out_Gear_Catch baseline AB run current AB run random noise added ForcedMigrate Checks outGearCatch baseline AB sim run current AB sim run random noise added ForcedMigrate. Compare out_Biomass baseline RK4 run current RK4 run random noise added ForcedMigrate Checks outBiomass baseline RK4 sim run current RK4 sim run random noise added ForcedMigrate. Compare out_Catch baseline RK4 run current RK4 run random noise added ForcedMigrate Checks outCatch baseline RK4 sim run current RK4 sim run random noise added ForcedMigrate. Compare out_Gear_Catch baseline RK4 run current RK4 run random noise added ForcedMigrate Checks outGearCatch baseline RK4 sim run current RK4 sim run random noise added ForcedMigrate.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"ab-and-rk4-sim-run-tests-with-stepped-noise-on-forcedbiomass","dir":"Articles","previous_headings":"List of Tests > Unit Tests","what":"AB and RK4 Sim Run Tests with Stepped Noise on ForcedBiomass:","title":"UnitTests","text":"Compare out_Biomass baseline AB run current AB run stepped noise added ForcedBio Checks outBiomass baseline AB sim run current AB sim run stepped noise added ForcedBio. Compare out_Catch baseline AB run current AB run stepped noise added ForcedBio Checks outCatch baseline AB sim run current AB sim run stepped noise added ForcedBio. Compare out_Gear_Catch baseline AB run current AB run stepped noise added ForcedBio Checks outGearCatch baseline AB sim run current AB sim run stepped noise added ForcedBio. Compare out_Biomass baseline RK4 run current RK4 run stepped noise added ForcedBio Checks outBiomass baseline RK4 sim run current RK4 sim run stepped noise added ForcedBio. Compare out_Catch baseline RK4 run current RK4 run stepped noise added ForcedBio Checks outCatch baseline RK4 sim run current RK4 sim run stepped noise added ForcedBio. Compare out_Gear_Catch baseline RK4 run current RK4 run stepped noise added ForcedBio Checks outGearCatch baseline RK4 sim run current RK4 sim run stepped noise added ForcedBio.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"ab-and-rk4-sim-run-tests-with-stepped-noise-on-forcedmigrate","dir":"Articles","previous_headings":"List of Tests > Unit Tests","what":"AB and RK4 Sim Run Tests with Stepped Noise on ForcedMigrate:","title":"UnitTests","text":"Compare out_Biomass baseline AB run current AB run stepped noise added ForcedMigrate Checks outBiomass baseline AB sim run current AB sim run stepped noise added ForcedMigrate Compare out_Catch baseline AB run current AB run stepped noise added ForcedMigrate Checks outCatch baseline AB sim run current AB sim run stepped noise added ForcedMigrate Compare out_Gear_Catch baseline AB run current AB run stepped noise added ForcedMigrate Checks outGearCatch baseline AB sim run current AB sim run stepped noise added ForcedMigrate Compare out_Biomass baseline RK4 run current RK4 run stepped noise added ForcedMigrate Checks outBiomass baseline RK4 sim run current RK4 sim run stepped noise added ForcedMigrate Compare out_Catch baseline RK4 run current RK4 run stepped noise added ForcedMigrate Checks outCatch baseline RK4 sim run current RK4 sim run stepped noise added ForcedMigrate Compare out_Gear_Catch baseline RK4 run current RK4 run stepped noise added ForcedMigrate Checks outGearCatch baseline RK4 sim run current RK4 sim run stepped noise added ForcedMigrate","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"ab-and-rk4-sim-run-tests-with-jitter-on-forcedeffort","dir":"Articles","previous_headings":"List of Tests > Unit Tests","what":"AB and RK4 Sim Run Tests with Jitter on ForcedEffort:","title":"UnitTests","text":"Compare out_Biomass baseline AB run current AB run random noise added ForcedEffort Checks outBiomass baseline AB sim run current AB sim run random noise added ForcedEffort. Compare out_Catch baseline AB run current AB run random noise added ForcedEffort Checks outCatch baseline AB sim run current AB sim run random noise added ForcedEffort. Compare out_Gear_Catch baseline AB run current AB run random noise added ForcedEffort Checks outGearCatch baseline AB sim run current AB sim run random noise added ForcedEffort. Compare out_Biomass baseline RK4 run current RK4 run random noise added ForcedEffort Checks outBiomass baseline RK4 sim run current RK4 sim run random noise added ForcedEffort. Compare out_Catch baseline RK4 run current RK4 run random noise added ForcedEffort Checks outCatch baseline RK4 sim run current RK4 sim run random noise added ForcedEffort. Compare out_Gear_Catch baseline RK4 run current RK4 run random noise added ForcedEffort Checks outGearCatch baseline RK4 sim run current RK4 sim run random noise added ForcedEffort.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"ab-and-rk4-sim-run-tests-with-jitter-on-forcedfrate","dir":"Articles","previous_headings":"List of Tests > Unit Tests","what":"AB and RK4 Sim Run Tests with Jitter on ForcedFRate:","title":"UnitTests","text":"Compare out_Biomass baseline AB run current AB run random noise added ForcedFRate Checks outBiomass baseline AB sim run current AB sim run random noise added ForcedFRate. Compare out_Catch baseline AB run current AB run random noise added ForcedFRate Checks outCatch baseline AB sim run current AB sim run random noise added ForcedFRate. Compare out_Gear_Catch baseline AB run current AB run withrandom noise added ForcedFRate Checks outGearCatch baseline AB sim run current AB sim run random noise added ForcedFRate. Compare out_Biomass baseline RK4 run current RK4 run random noise added ForcedFRate Checks outBiomass baseline RK4 sim run current RK4 sim run random noise added ForcedFRate. Compare out_Catch baseline RK4 run current RK4 run random noise added ForcedFRate Checks outCatch baseline RK4 sim run current RK4 sim run random noise added ForcedFRate. Compare out_Gear_Catch baseline RK4 run current RK4 run random noise added ForcedFRate Checks outGearCatch baseline RK4 sim run current RK4 sim run random noise added ForcedFRate.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"ab-and-rk4-sim-run-tests-with-jitter-on-forcedcatch","dir":"Articles","previous_headings":"List of Tests > Unit Tests","what":"AB and RK4 Sim Run Tests with Jitter on ForcedCatch:","title":"UnitTests","text":"Compare out_Biomass baseline AB run current AB run random noise added ForcedCatch Checks outBiomass baseline AB sim run current AB sim run random noise added ForcedCatch Compare out_Catch baseline AB run current AB run random noise added ForcedCatch Checks outCatch baseline AB sim run current AB sim run random noise added ForcedCatch Compare out_Gear_Catch baseline AB run current AB run random noise added ForcedCatch Checks outGearCatch baseline AB sim run current AB sim run random noise added ForcedCatch Compare out_Biomass baseline RK4 run current RK4 run random noise added ForcedCatch Checks outBiomass baseline RK4 sim run current RK4 sim run random noise added ForcedCatch Compare out_Catch baseline RK4 run current RK4 run random noise added ForcedCatch Checks outCatch baseline RK4 sim run current RK4 sim run random noise added ForcedCatch Compare out_Gear_Catch baseline RK4 run current RK4 run random noise added ForcedCatch Checks outGearCatch baseline RK4 sim run current RK4 sim run random noise added ForcedCatch","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"ab-and-rk4-sim-run-tests-with-stepped-noise-on-forcedeffort","dir":"Articles","previous_headings":"List of Tests > Unit Tests","what":"AB and RK4 Sim Run Tests with Stepped Noise on ForcedEffort:","title":"UnitTests","text":"Compare out_Biomass baseline AB run current AB run stepped noise added ForcedEffort Checks outBiomass baseline AB sim run current AB sim run stepped noise added ForcedEffort. Compare out_Catch baseline AB run current AB run stepped noise added ForcedEffort Checks outCatch baseline AB sim run current AB sim run stepped noise added ForcedEffort. Compare out_Gear_Catch baseline AB run current AB run stepped noise added ForcedEffort Checks outGearCatch baseline AB sim run current AB sim run stepped noise added ForcedEffort. Compare out_Biomass baseline RK4 run current RK4 run stepped noise added ForcedEffort Checks outBiomass baseline RK4 sim run current RK4 sim run stepped noise added ForcedEffort. Compare out_Catch baseline RK4 run current RK4 run stepped noise added ForcedEffort Checks outCatch baseline RK4 sim run current RK4 sim run stepped noise added ForcedEffort. Compare out_Gear_Catch baseline RK4 run current RK4 run stepped noise added ForcedEffort Checks outGearCatch baseline RK4 sim run current RK4 sim run stepped noise added ForcedEffort.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"ab-and-rk4-sim-run-tests-with-stepped-noise-on-forcedfrate","dir":"Articles","previous_headings":"List of Tests > Unit Tests","what":"AB and RK4 Sim Run Tests with Stepped Noise on ForcedFRate:","title":"UnitTests","text":"Compare out_Biomass baseline AB run current AB run stepped noise added ForcedFRate Checks outBiomass baseline AB sim run current AB sim run stepped noise added ForcedFRate. Compare out_Catch baseline AB run current AB run stepped noise added ForcedFRate Checks outCatch baseline AB sim run current AB sim run stepped noise added ForcedFRate. Compare out_Gear_Catch baseline AB run current AB run stepped noise added ForcedFRate Checks outGearCatch baseline AB sim run current AB sim run stepped noise added ForcedFRate. Compare out_Biomass baseline RK4 run current RK4 run stepped noise added ForcedFRate Checks outBiomass baseline RK4 sim run current RK4 sim run stepped noise added ForcedFRate. Compare out_Catch baseline RK4 run current RK4 run stepped noise added ForcedFRate Checks outCatch baseline RK4 sim run current RK4 sim run stepped noise added ForcedFRate. Compare out_Gear_Catch baseline RK4 run current RK4 run stepped noise added ForcedFRate Checks outGearCatch baseline RK4 sim run current RK4 sim run stepped noise added ForcedFRate.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"ab-and-rk4-sim-run-tests-with-stepped-noise-on-forcedcatch","dir":"Articles","previous_headings":"List of Tests > Unit Tests","what":"AB and RK4 Sim Run Tests with Stepped Noise on ForcedCatch:","title":"UnitTests","text":"Compare out_Biomass baseline AB run current AB run stepped noise added ForcedCatch Checks outBiomass baseline AB sim run current AB sim run stepped noise added ForcedCatch Compare out_Catch baseline AB run current AB run stepped noise added ForcedCatch Checks outCatch baseline AB sim run current AB sim run stepped noise added ForcedCatch Compare out_Gear_Catch baseline AB run current AB run stepped noise added ForcedCatch Checks outGearCatch baseline AB sim run current AB sim run stepped noise added ForcedCatch Compare out_Biomass baseline RK4 run current RK4 run stepped noise added ForcedCatch Checks outBiomass baseline RK4 sim run current RK4 sim run stepped noise added ForcedCatch Compare out_Catch baseline RK4 run current RK4 run stepped noise added ForcedCatch Checks outCatch baseline RK4 sim run current RK4 sim run stepped noise added ForcedCatch Compare out_Gear_Catch baseline RK4 run current RK4 run stepped noise added ForcedCatch Checks outGearCatch baseline RK4 sim run current RK4 sim run stepped noise added ForcedCatch *out_Gear_Catch tests currently awaiting issue #74 resolved.","code":""},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"figures","dir":"Articles","previous_headings":"","what":"Figures","title":"UnitTests","text":"Unit Tests compare current runs baseline runs produce plots pdf file. plots may useful diagnostic purposes. plots depict output current run blue baseline run red. errors, red visible plots. two types plots available, also set variable tests/testthat/test-rpath.R: PLOT_TYPE set 1, plot depicts current model blue superimposed baseline model red. PLOT_TYPE set 2, difference (current-baseline) displayed.","code":"PLOT_TYPE <- 1"},{"path":"https://noaa-edab.github.io/Rpath/articles/UnitTests.html","id":"example-plots","dir":"Articles","previous_headings":"","what":"Example plots:","title":"UnitTests","text":"Figure 1 depicts Rpath Simulation run Biomass Density vs Time 3 species. REcosystem_scene$forcing$ForcedBio table, modified random noise. baseline current model runs use AB (Adams-Bashforth) numerical differential equation method. Notice red line visible plot. , current (blue) line identical (covers completely) baseline (red) plot. Figure 1. Difference Baseline vs Current Models Figure 2 depicts information Figure 1 difference randomization factor slightly changed current model used baseline model. done highlight plot appear current model deviated baseline. Notice underlying baseline plot (red) now clearly visible. Figure 2. Difference red Baseline vs Current Models Figure 3 shows difference current baseline models. models identical, difference 0, plots completely flat lines. plot shows current-baseline plots data shown Figure 2. Notice plot lines completely flat, denoting difference 0. scale y-axis may modified changing following line tests/testthat/test-rpath.R: Figure 3. Current-Baseline Result","code":"REcosystem_scene <- rsim.scenario(REco, REco.params, 1:50) YLIMIT_DIFFERENCE_PLOTS <- 0.05"},{"path":"https://noaa-edab.github.io/Rpath/articles/ecosense.html","id":"ecosense","dir":"Articles","previous_headings":"","what":"Ecosense","title":"Generating an Rsim ensemble with Ecosense","text":"vignette includes example Rpath models Whitehouse Aydin (2020). eastern Bering Sea (EBS), eastern Chukchi Sea (ECS), Gulf Alaska (GOA) marine food webs, uses EBS model example. models 50‚Äì54 functional groups, including one fishery, one primary producer, two detrital compartments, stanzas. use Ecosense need rpath.params object corresponding rsim.scenario object. First, load unbalanced models, balance , setup rsim scenario objects.","code":"# balance the models EBS_bal <- rpath(Ecosense.EBS) ECS_bal <- rpath(Ecosense.ECS) GOA_bal <- rpath(Ecosense.GOA) # create rsim scenario objects EBS_scene <- rsim.scenario(EBS_bal, Ecosense.EBS, years=1:100) ECS_scene <- rsim.scenario(ECS_bal, Ecosense.ECS, years=1:100) GOA_scene <- rsim.scenario(GOA_bal, Ecosense.GOA, years=1:100)"},{"path":"https://noaa-edab.github.io/Rpath/articles/ecosense.html","id":"setting-up-ecosense","dir":"Articles","previous_headings":"Ecosense","what":"Setting up Ecosense","title":"Generating an Rsim ensemble with Ecosense","text":"Full sets Ecosim parameter sets drawn distributions centered original Rpath parameter estimates. width distribution parameter defined data pedigree rpath.params object. drawn parameters include biomass, P/B, Q/B, diet composition, natural mortality (.e., M zero). Additionally, vulnerability handling time predator prey functional response can drawn specified range (lower/upper bounds log space-1) individual predator-prey interaction. single parameter set can generated call rsim.sense(). object returned rsim.sense() equivalent list parameters rsim.scenario() object (e.g., scenario_object$params). Ecosim parameter set drawn Ecosense can subject initial simulation, also known burn-, eliminate unstable parameter sets. instability usually results incompatible draws parameter sets either lead uncontrolled population growth population crash. predator consumption production exceeds production prey. length burn-period can set original rsim.scenario object. burn-, biomass functional group exceeds 1,000x starting biomass decreases less 1/1,000 starting biomass, ecosystem parameter set rejected retained analysis. 50 year burn-period generally sufficient eliminate unstable configurations.","code":"# One set of Ecosim parameters for the EBS model rsim.sense(EBS_scene,Ecosense.EBS,Vvary = c(0,0), Dvary = c(0,0)) ## Rsim parameters for   ##  ##   NumGroups NumLiving NumDetritus NumFleets ## 1        54        51           2         1 ##  ## $params also includes: ##  [1] \"NUM_GROUPS\"       \"NUM_LIVING\"       \"NUM_DEAD\"         \"NUM_GEARS\"        ##  [5] \"NUM_BIO\"          \"spname\"           \"spnum\"            \"B_BaseRef\"        ##  [9] \"MzeroMort\"        \"UnassimRespFrac\"  \"ActiveRespFrac\"   \"FtimeAdj\"         ## [13] \"FtimeQBOpt\"       \"PBopt\"            \"NoIntegrate\"      \"HandleSelf\"       ## [17] \"ScrambleSelf\"     \"PreyFrom\"         \"PreyTo\"           \"QQ\"               ## [21] \"DD\"               \"VV\"               \"HandleSwitch\"     \"PredPredWeight\"   ## [25] \"PreyPreyWeight\"   \"NumPredPreyLinks\" \"FishFrom\"         \"FishThrough\"      ## [29] \"FishQ\"            \"FishTo\"           \"NumFishingLinks\"  \"DetFrac\"          ## [33] \"DetFrom\"          \"DetTo\"            \"NumDetLinks\"      \"BURN_YEARS\"       ## [37] \"COUPLED\"          \"RK4_STEPS\"        \"SENSE_LIMIT\" # Setting the burn-in period in the EBS scenario object to 50 years. EBS_scene$params$BURN_YEARS <- 50"},{"path":"https://noaa-edab.github.io/Rpath/articles/ecosense.html","id":"generating-an-ensemble-of-ecosim-parameter-sets","dir":"Articles","previous_headings":"Ecosense","what":"Generating an ensemble of Ecosim parameter sets","title":"Generating an Rsim ensemble with Ecosense","text":"generate ensemble parameter sets can repeat call rsim.sense() loop. First, determine number parameter sets wish generate create lists store parameter sets. Set another vector keep track generated parameter sets rejected retained. example generate 1,000 parameter sets (NUM_RUNS) eastern Bering Sea food web model. parlist[[]] object store ith generated parameter set. Optionally, can use set.seed() replicate results. following loop generates ensemble Ecosim parameters EBS food web model, assigns generated base biomass (B_BaseRef) starting biomass rsim.scenario object, sets burn years 50, runs simulation rsim.run(), rejects retains parameter sets based boundaries described . loop produces output console noting whether generated parameter set success failure, year ecosystem ‚Äúcrashed‚Äù, group(s) responsible crash. results first two generated parameter sets: 1 : fail year 1 : Squids 2 : fail year 7 : Salmon returning first two ecosystems failed, first year one second year seven. Squids crashed first ecosystem Salmon returning second. 52nd generated parameter set first survive 50 year burn-: 52 : success! determine 1,000 generated systems survived burn-, many survived burn-rejection rate : numbers KEPT can used access retained parameter sets parlist[[]]. example, 43 parameter sets retained rejection rate generated parameter sets 95.7%. retained Rsim parameter sets can run simulation another loop. loop subjects 43 retained parameter sets example 100 year simulation without additional perturbations, first 50 years burn-period. biomass can differ greatly generated parameter sets, relative biomass can used plotting. loop calculates relative biomass group system, relative starting biomass, drawn Ecosense. ‚Äôs example plot walleye pollock retained Rsim parameter sets. First setup matrix store pollock trajectories simulations retained parameter sets. plot trajectories:   line represents relative biomass trajectory walleye pollock 100 year simulation retained Rsim parameter sets.","code":"NUM_RUNS <- 1000 # This is how many ecosystem parameter sets to generate parlist<-as.list(rep(NA,NUM_RUNS)) # Creates lists to store the generated parameters kept<-rep(NA,NUM_RUNS) # Object to keep track of kept systems set.seed(666) # Optional, set seed so output can be replicated for (i in 1:NUM_RUNS){   EBSsense <- EBS_scene # scenario object   # INSERT SENSE ROUTINE BELOW   parlist[[i]]<- EBS_scene$params       # Base ecosim params   parlist[[i]]<- rsim.sense(EBS_scene,Ecosense.EBS,Vvary = c(-4.5,4.5), Dvary = c(0,0)) # Replace the base params with Ecosense params   EBSsense$start_state$Biomass <- parlist[[i]]$B_BaseRef # Apply the Ecosense starting biomass   parlist[[i]]$BURN_YEARS <- 50         # Set Burn Years to 50   EBSsense$params <- parlist[[i]] # replace base params with the Ecosense generated params   EBStest <- rsim.run(EBSsense, method=\"AB\") # Run rsim with the generated system   failList <- which(is.na(EBStest$end_state$Biomass))   {if (length(failList)>0)   {cat(i,\": fail in year \",EBStest$crash_year,\": \",EBStest$params$spname[failList],\"\\n\"); kept[i]<-F; flush.console()}     else      {cat(i,\": success!\\n\"); kept[i]<-T;  flush.console()}} # output for the console   parlist[[i]]$BURN_YEARS <- 1 } KEPT <- which(kept==TRUE); KEPT # the number associated with the kept system ##  [1]  52  68  69  78  85 129 139 163 174 195 216 224 245 267 285 303 327 359 373 ## [20] 378 382 421 447 474 489 546 575 600 613 628 662 705 725 797 813 848 889 890 ## [39] 893 902 903 938 944 nkept <- length(KEPT); nkept # how many were kept ## [1] 43 1-(nkept/NUM_RUNS) # rejection rate ## [1] 0.957 ecos <- as.list(rep(NA,length(KEPT))) # lists for simulated ecosystems k <- 0  # counter for simulated ecosystems for (i in KEPT) {   EBS_scene$start_state$Biomass <- parlist[[i]]$B_BaseRef # set the starting Biomass to the generated values   EBSsense <- EBS_scene # set up the scenario object   EBSsense$params <- parlist[[i]] # set the params in the scenario object equal to the generated params.   EBSsense$BURN_YEARS <- -1 # no burn-in period   k <- k + 1 # set the number for the simulated ecosystem   ecos[[k]] <- rsim.run(EBSsense,method='AB') # run rsim.run on the generated system   print(c(\"Ecosystem no.\",k,\"out of\",nkept)) # progress output to console } relB_ecos <- as.list(rep(NA,length(KEPT))) # list to output relative biomass k <- 0 for (i in 1:nkept) {   spname <- colnames(ecos[[i]]$out_Biomass[,2:ncol(ecos[[i]]$out_Biomass)])   biomass <- ecos[[i]]$out_Biomass[, spname]   n <- ncol(biomass)   start.bio <- biomass[1, ] # the drawn starting biomass    start.bio[which(start.bio == 0)] <- 1   rel.bio <- matrix(NA, dim(biomass)[1], dim(biomass)[2])   for(isp in 1:n) rel.bio[, isp] <- biomass[, isp] / start.bio[isp] # biomass relative to biomass at t=1   colnames(rel.bio) <- spname   k <- k + 1   relB_ecos[[k]] <- rel.bio } this_species <- \"Walleye pollock\" plot_mat <- matrix(nrow=1200, ncol=nkept) # matrix of pollock trajectories from all generated systems for (i in 1:nkept) {   plot_mat[,i] <- relB_ecos[[i]][,this_species] } plot_col <- viridis(nkept) #layout(matrix(c(1,1,1,1,1,1,2,2), nrow = 1, ncol = 8, byrow = TRUE)) plot(1:1200, relB_ecos[[1]][,this_species], type='n', xlab=\"Months\",      ylab=\"Relative biomass\", ylim=c(min(plot_mat),max(plot_mat)), main=this_species) # one line for pollock in each of the generated systems for (i in 1:nkept) {   lines(1:1200, relB_ecos[[i]][,this_species], lwd=2, col=plot_col[i]) } # distribution of pollock relative biomasses boxplot(plot_mat[1200,], ylim=c(min(plot_mat),max(plot_mat)), yaxt='n') axis(side=2, at=c(seq(0,150,50)), tick=TRUE, labels=F)"},{"path":"https://noaa-edab.github.io/Rpath/articles/ecosense.html","id":"run-the-kept-systems-with-a-perturbation","dir":"Articles","previous_headings":"Ecosense","what":"Run the kept systems with a perturbation","title":"Generating an Rsim ensemble with Ecosense","text":"working ensemble , often interested perturbation across ensemble members describe range potential outcomes. example, ‚Äôll increase fishing mortality walleye pollock using adjust.fishing() function. first 50 years simulation burn-period. , perturbation put place year 51 100, example increase walleye pollock fishing mortality 2x. visualize results, use relative biomass time relative biomass end burn-period (year 50). point time perturbation began point want measure response change. Plot trajectories walleye pollock perturbation. Note, x-axis starts beginning perturbation (January year 51).   Biomass walleye pollock decreased 43 ecosystems response perturbation. Walleye pollock nodal species eastern Bering Sea food web perturbation example might illicit response many functional groups across food web. example boxplot distribution biomass outcomes living functional groups relative biomass start perturbation.","code":"ecos_sp <- as.list(rep(NA,length(KEPT))) # lists for simulated ecosystems k <- 0  # counter for simulated ecosystems for (i in KEPT) {   EBS_scene$start_state$Biomass <- parlist[[i]]$B_BaseRef # set the starting Biomass to the generated values   EBSsense <- EBS_scene # set up the scenario object   EBSsense <- adjust.fishing(EBSsense, \"ForcedFRate\", group=this_species, sim.year=51:100, value=2) # perturb pollock FRate   EBSsense$params <- parlist[[i]] # set the params in the scenario object equal to the generated params.   EBSsense$BURN_YEARS <- -1 # no burn-in period   k <- k + 1 # set the number for the simulated ecosystem   ecos_sp[[k]] <- rsim.run(EBSsense,method='AB') # run rsim.run on the generated system   print(c(\"Ecosystem no.\", k, \"out of\", nkept)) # progress output to console } relB_ecos_sp <- as.list(rep(NA,length(KEPT))) k <- 0 for (i in 1:nkept) {   spname <- colnames(ecos_sp[[i]]$out_Biomass[,2:ncol(ecos_sp[[i]]$out_Biomass)])   biomass <- ecos_sp[[i]]$out_Biomass[, spname]   n <- ncol(biomass)   start.bio <- biomass[600, ] # end of burn-in   start.bio[which(start.bio == 0)] <- 1   rel.bio <- matrix(NA, dim(biomass)[1], dim(biomass)[2])   for(isp in 1:n) rel.bio[, isp] <- biomass[, isp] / start.bio[isp] # biomass relative to the end of burn-in biomass   colnames(rel.bio) <- spname   k <- k + 1   relB_ecos_sp[[k]] <- rel.bio } plot_mat_sp <- matrix(nrow=1200, ncol=nkept) for (i in 1:nkept) {   plot_mat_sp[,i] <- relB_ecos_sp[[i]][,this_species] } #layout(matrix(c(1,1,1,1,1,1,2,2), nrow = 1, ncol = 8, byrow = TRUE)) plot(601:1200, relB_ecos_sp[[1]][601:1200,this_species], type='n', xlab=\"Months\",      ylab=\"Relative biomass\", ylim=c(min(plot_mat_sp[601:1200,]),max(plot_mat_sp[601:1200,])), main=this_species) for (i in 1:nkept) {   lines(601:1200, relB_ecos_sp[[i]][601:1200,this_species], lwd=2, col=plot_col[i]) } boxplot(plot_mat_sp[1200,], ylim=c(min(plot_mat_sp[601:1200,]),max(plot_mat_sp[601:1200,]))) sp_perturb_out <- matrix(nrow=nkept, ncol=(EBS_bal$NUM_LIVING+EBS_bal$NUM_DEAD)) for(i in 1:nkept){   sp_perturb_out[i,] <- relB_ecos_sp[[i]][1200,] } colnames(sp_perturb_out) <- colnames(relB_ecos_sp[[1]]) par(mfrow=c(1,1), mar=c(9,3,0.5,0.5)) boxplot(sp_perturb_out, outline=FALSE, las=2, cex.axis=0.6) abline(h=1, lty=2)"},{"path":"https://noaa-edab.github.io/Rpath/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kerim Aydin. Author, maintainer. Sean Lucey. Author. Sarah Gaichas. Author. Sarah Weisberg. Author. Andy Whitehouse. Author. Bia Dias. Contributor. Ron Klasky. Contributor. Andy Beet. Contributor. Max Grezlik. Contributor.","code":""},{"path":"https://noaa-edab.github.io/Rpath/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aydin K, Lucey S, Gaichas S, Weisberg S, Whitehouse (2025). Rpath: R implementation Ecopath Ecosim. R package version 1.0.0, https://noaa-edab.github.io/Rpath/.","code":"@Manual{,   title = {Rpath: R implementation of Ecopath with Ecosim},   author = {Kerim Aydin and Sean Lucey and Sarah Gaichas and Sarah Weisberg and Andy Whitehouse},   year = {2025},   note = {R package version 1.0.0},   url = {https://noaa-edab.github.io/Rpath/}, }"},{"path":"https://noaa-edab.github.io/Rpath/index.html","id":"rpath-","dir":"","previous_headings":"","what":"R implementation of Ecopath with Ecosim","title":"R implementation of Ecopath with Ecosim","text":"Package Rpath R/Rcpp implementation Ecopath (mass-balance) Ecosim (dynamic simulation) methods modeling food webs. Rpath package includes sensitivity analysis tools, bioenergetics forcing, ability develop adaptive dynamic simulations annual adjustment/feedback use management strategy evaluations similar analyses.","code":""},{"path":"https://noaa-edab.github.io/Rpath/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R implementation of Ecopath with Ecosim","text":"install package build vignettes locally experience issues installing package using remotes don‚Äôt need vignettes locally please use alternative","code":"remotes::install_github(\"noaa-edab/Rpath\",build_vignettes=TRUE)` pak::pak(\"noaa-edab/Rpath\")"},{"path":"https://noaa-edab.github.io/Rpath/index.html","id":"more-details","dir":"","previous_headings":"","what":"More details","title":"R implementation of Ecopath with Ecosim","text":"background, please see:","code":""},{"path":"https://noaa-edab.github.io/Rpath/index.html","id":"for-rpath-description-and-methods","dir":"","previous_headings":"","what":"For Rpath description and methods:","title":"R implementation of Ecopath with Ecosim","text":"Lucey, S. M., Gaichas, S. K., & Aydin, K. Y. (2020). Conducting reproducible ecosystem modeling using open source mass balance model Rpath. Ecological Modelling 427(2020), 109057. https://doi.org/10.1016/j.ecolmodel.2020.109057.","code":""},{"path":"https://noaa-edab.github.io/Rpath/index.html","id":"for-use-of-rpath-for-management-strategy-evaluations","dir":"","previous_headings":"","what":"For use of Rpath for management strategy evaluations:","title":"R implementation of Ecopath with Ecosim","text":"Lucey, S. M., Aydin, K. Y., Gaichas, S. K., Cadrin, S. X., Fay, G., Fogarty, M. J., & Punt, . (2021). Evaluating fishery management strategies using ecosystem model operating model. Fisheries Research 234(2021), 105780. https://doi.org/10.1016/j.fishres.2020.105780.","code":""},{"path":"https://noaa-edab.github.io/Rpath/index.html","id":"for-incorporation-of-bioenergetics-into-rpath-simulations","dir":"","previous_headings":"","what":"For incorporation of bioenergetics into Rpath simulations:","title":"R implementation of Ecopath with Ecosim","text":"Heinichen, M., McManus, M. C., Lucey, S. M., Aydin, K. Y., Humphries, ., Innes-Gold, ., & Collie, J. (2022). Incorporating temperature-dependent fish bioenergetics Narragansett Bay food web model. Ecological Modelling 466(2022), 109911. https://doi.org/10.1016/j.ecolmodel.2022.109911.","code":""},{"path":"https://noaa-edab.github.io/Rpath/index.html","id":"for-use-of-rpath-sensitivity-tools","dir":"","previous_headings":"","what":"For use of Rpath sensitivity tools:","title":"R implementation of Ecopath with Ecosim","text":"Whitehouse, G.., & Aydin, K.Y. (2020). Assessing sensitivity three Alaska marine food webs perturbations: example Ecosim simulations using Rpath. Ecological Modelling 429(2020), 109074. https://doi.org/10.1016/j.ecolmodel.2020.109074.","code":""},{"path":"https://noaa-edab.github.io/Rpath/index.html","id":"for-original-development-of-ecopath-and-ecosim","dir":"","previous_headings":"","what":"For original development of Ecopath and Ecosim:","title":"R implementation of Ecopath with Ecosim","text":"Polovina, J. J. (1984). Model coral reef ecosystem. Coral Reefs 3(1), 1‚Äì11. https://doi.org/10.1007/BF00306135. Christensen, V., & Walters, C. J. (2004). Ecopath Ecosim: Methods, capabilities limitations. Ecological Modelling 172(2), 109‚Äì139. https://doi.org/10.1016/j.ecolmodel.2003.09.003. Walters, C., Pauly, D., Christensen, V., & Kitchell, J. F. (2000). Representing Density Dependent Consequences Life History Strategies Aquatic Ecosystems: EcoSim II. Ecosystems 3(1), 70‚Äì83. https://doi.org/10.1007/s100210000011.","code":""},{"path":"https://noaa-edab.github.io/Rpath/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"R implementation of Ecopath with Ecosim","text":"repository scientific product official communication National Oceanic Atmospheric Administration, United States Department Commerce. NOAA GitHub project code provided ‚Äò‚Äô basis user assumes responsibility use. claims Department Commerce Department Commerce bureaus stemming use GitHub project governed applicable Federal law. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring Department Commerce. Department Commerce seal logo, seal logo DOC bureau, shall used manner imply endorsement commercial product activity DOC United States Government.  U.S. Department Commerce | National Oceanographic Atmospheric Administration | NOAA Fisheries","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/AB.params.html","id":null,"dir":"Reference","previous_headings":"","what":"AB.params ‚Äî AB.params","title":"AB.params ‚Äî AB.params","text":"Anchovy Bay (AB.params) sample ecosystem frequently used example ecosystem EwE (see Christensen Walters, 2024).","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/AB.params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AB.params ‚Äî AB.params","text":"","code":"AB.params"},{"path":"https://noaa-edab.github.io/Rpath/reference/AB.params.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AB.params ‚Äî AB.params","text":"unbalanced Rpath model object contains: model data.table containing Ecopath unbalanced ecosystem   parameters (base parameters fisheries). diet data.table containing Ecopath model's diet matrix. stanzas Parameters multistanza groups. pedigree data.table containing data quality (pedigree)   Ecopath model.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/AB.params.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"AB.params ‚Äî AB.params","text":"Christensen V, Walters CJ (2024) Ecosystem Modelling EwE.   University British Columbia, Vancouver, BC. doi:10.14288/24d7-ab68","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/AB.params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AB.params ‚Äî AB.params","text":"","code":"# Balance the model AB_bal <- rpath(AB.params)"},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.EBS.html","id":null,"dir":"Reference","previous_headings":"","what":"Eastern Bering Sea 1990s Ecopath model ‚Äî Ecosense.EBS","title":"Eastern Bering Sea 1990s Ecopath model ‚Äî Ecosense.EBS","text":"Rpath inputs eastern Bering Sea 1990s Ecopath model (53 biological groups 1 fleet).","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.EBS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eastern Bering Sea 1990s Ecopath model ‚Äî Ecosense.EBS","text":"","code":"Ecosense.EBS"},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.EBS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Eastern Bering Sea 1990s Ecopath model ‚Äî Ecosense.EBS","text":"unbalanced Rpath model object contains: model data.table containing Ecopath unbalanced ecosystem   parameters (base parameters fisheries). diet data.table containing Ecopath model's diet matrix. stanzas Parameters multistanza groups. pedigree data.table containing data quality (pedigree)   Ecopath model.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.EBS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Eastern Bering Sea 1990s Ecopath model ‚Äî Ecosense.EBS","text":"Whitehouse Aydin 2020.  Assessing sensitivity three Alaska   marine food webs perturbations: example Ecosim simulations using   Rpath. https://doi.org/10.1016/j.ecolmodel.2020.109074","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.EBS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Eastern Bering Sea 1990s Ecopath model ‚Äî Ecosense.EBS","text":"aggregated version 1990s eastern Bering Sea Ecopath   model Aydin et al. (2007) include stanzas.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.EBS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Eastern Bering Sea 1990s Ecopath model ‚Äî Ecosense.EBS","text":"Aydin KY, Gaichas S, Ortiz , Kinzey D, Friday N (2007)   comparison Bering Sea, Gulf Alaska, Aleutian Islands large   marine ecosystems food web modeling. U.S. Dep. Commer., NOAA Tech.   Memo. NMFS-AFSC-178.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.EBS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Eastern Bering Sea 1990s Ecopath model ‚Äî Ecosense.EBS","text":"","code":"# Balance the model ebs_bal <- rpath(Ecosense.EBS)"},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.ECS.html","id":null,"dir":"Reference","previous_headings":"","what":"Eastern Chukchi Sea Ecopath model ‚Äî Ecosense.ECS","title":"Eastern Chukchi Sea Ecopath model ‚Äî Ecosense.ECS","text":"Rpath inputs eastern Chukchi Sea Ecopath model (52 biological groups 1 fleet).","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.ECS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eastern Chukchi Sea Ecopath model ‚Äî Ecosense.ECS","text":"","code":"Ecosense.ECS"},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.ECS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Eastern Chukchi Sea Ecopath model ‚Äî Ecosense.ECS","text":"unbalanced Rpath model object contains: model data.table containing Ecopath unbalanced ecosystem   parameters (base parameters fisheries). diet data.table containing Ecopath model's diet matrix. stanzas Parameters multistanza groups. pedigree data.table containing data quality (pedigree)   Ecopath model.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.ECS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Eastern Chukchi Sea Ecopath model ‚Äî Ecosense.ECS","text":"Whitehouse Aydin 2020.  Assessing sensitivity three Alaska   marine food webs perturbations: example Ecosim simulations using   Rpath. https://doi.org/10.1016/j.ecolmodel.2020.109074","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.ECS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Eastern Chukchi Sea Ecopath model ‚Äî Ecosense.ECS","text":"aggregated version eastern Chukchi Sea Ecopath model   Whitehouse Aydin (2016).","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.ECS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Eastern Chukchi Sea Ecopath model ‚Äî Ecosense.ECS","text":"Whitehouse GA, Aydin KY (2016) Trophic structure eastern   Chukchi Sea: updated mass balance food web model. U.S. Dep Commer, NOAA   Tech. Memo. NMFS-AFSC-318. doi:10.7289/V5/TM-AFSC-318","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.ECS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Eastern Chukchi Sea Ecopath model ‚Äî Ecosense.ECS","text":"","code":"# Balance the model ecs_bal <- rpath(Ecosense.ECS)"},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.GOA.html","id":null,"dir":"Reference","previous_headings":"","what":"Gulf of Alaska (west/central) 1990s Ecopath model ‚Äî Ecosense.GOA","title":"Gulf of Alaska (west/central) 1990s Ecopath model ‚Äî Ecosense.GOA","text":"Rpath inputs Gulf Alaska (west/central) 1990s Ecopath model (49 biological groups 1 fleet).","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.GOA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gulf of Alaska (west/central) 1990s Ecopath model ‚Äî Ecosense.GOA","text":"","code":"Ecosense.GOA"},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.GOA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gulf of Alaska (west/central) 1990s Ecopath model ‚Äî Ecosense.GOA","text":"unbalanced Rpath model object contains: model data.table containing Ecopath unbalanced ecosystem   parameters (base parameters fisheries). diet data.table containing Ecopath model's diet matrix. stanzas Parameters multistanza groups. pedigree data.table containing data quality (pedigree)   Ecopath model.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.GOA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gulf of Alaska (west/central) 1990s Ecopath model ‚Äî Ecosense.GOA","text":"Whitehouse Aydin 2020.  Assessing sensitivity three Alaska   marine food webs perturbations: example Ecosim simulations using   Rpath. https://doi.org/10.1016/j.ecolmodel.2020.109074","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.GOA.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Gulf of Alaska (west/central) 1990s Ecopath model ‚Äî Ecosense.GOA","text":"aggregated version 1990s Gulf Alaska Ecopath model   Aydin et al. (2007) include stanzas.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.GOA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gulf of Alaska (west/central) 1990s Ecopath model ‚Äî Ecosense.GOA","text":"Aydin KY, Gaichas S, Ortiz , Kinzey D, Friday N (2007)   comparison Bering Sea, Gulf Alaska, Aleutian Islands large   marine ecosystems food web modeling. U.S. Dep. Commer., NOAA Tech.   Memo. NMFS-AFSC-178.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Ecosense.GOA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gulf of Alaska (west/central) 1990s Ecopath model ‚Äî Ecosense.GOA","text":"","code":"# Balance the model goa_bal <- rpath(Ecosense.GOA)"},{"path":"https://noaa-edab.github.io/Rpath/reference/MTI.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantify mixed trophic impacts ‚Äî MTI","title":"Quantify mixed trophic impacts ‚Äî MTI","text":"Uses static Rpath model creates matrix mixed trophic impacts.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/MTI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantify mixed trophic impacts ‚Äî MTI","text":"","code":"MTI(Rpath, Rpath.params, increase = T)"},{"path":"https://noaa-edab.github.io/Rpath/reference/MTI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantify mixed trophic impacts ‚Äî MTI","text":"Rpath Rpath R object containing static Rpath model. Rpath.params R object containing Rpath model parameters.  generated either create.rpath.params() read.rpath.params() functions. increase Logical value indicating whether marginal increase applied.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/MTI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantify mixed trophic impacts ‚Äî MTI","text":"Returns matrix mixed trophic impacts.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/REco.params.html","id":null,"dir":"Reference","previous_headings":"","what":"REco.params ‚Äî REco.params","title":"REco.params ‚Äî REco.params","text":"Rpath inputs tutorial Rpath ecosystem.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/REco.params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"REco.params ‚Äî REco.params","text":"","code":"REco.params"},{"path":"https://noaa-edab.github.io/Rpath/reference/REco.params.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"REco.params ‚Äî REco.params","text":"unbalanced Rpath model object contains: model data.table containing Ecopath unbalanced ecosystem   parameters (base parameters fisheries). diet data.table containing Ecopath model's diet matrix. stanzas Parameters multistanza groups. pedigree data.table containing data quality (pedigree)   Ecopath model.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/REco.params.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"REco.params ‚Äî REco.params","text":"Lucey SM, Gaichas SK, Aydin KY (2020) Conducting reproducible   ecosystem modeling using open source mass balance model Rpath. Ecol   Model 427:11. doi:10.1016/j.ecolmodel.2020.109057","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/REco.params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"REco.params ‚Äî REco.params","text":"","code":"# Balance the model REco_bal <- rpath(REco.params)"},{"path":"https://noaa-edab.github.io/Rpath/reference/Rpath-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Rpath: A package implementing mass balance algorithms designed to work with fisheries data sources. ‚Äî Rpath-package","title":"Rpath: A package implementing mass balance algorithms designed to work with fisheries data sources. ‚Äî Rpath-package","text":"Rpath package provides two categories important functions: rpath rsim. Rpath package provides two categories important functions: rpath rsim.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Rpath-package.html","id":"rpath-functions","dir":"Reference","previous_headings":"","what":"Rpath functions","title":"Rpath: A package implementing mass balance algorithms designed to work with fisheries data sources. ‚Äî Rpath-package","text":"Rpath functions generate balanced snap shot energy flow system.  done solving series linear equations unknown biomass ecotrophic efficiency.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/Rpath-package.html","id":"rpath-functions-1","dir":"Reference","previous_headings":"","what":"rpath functions","title":"Rpath: A package implementing mass balance algorithms designed to work with fisheries data sources. ‚Äî Rpath-package","text":"rpath functions generate balanced snap shot energy flow system.  done solving series linear equations unknown biomass ecotrophic efficiency.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/Rpath-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rpath: A package implementing mass balance algorithms designed to work with fisheries data sources. ‚Äî Rpath-package","text":"Maintainer: Kerim Aydin kerim.aydin@noaa.gov (ORCID) Authors: Sean Lucey sean.m.lucey@noaa.gov (ORCID) Sarah Gaichas sgaichas@hydrascientificllc.com (ORCID) Sarah Weisberg sarahjweisberg@gmail.com (ORCID) Andy Whitehouse gaw@uw.edu (ORCID) contributors: Bia Dias bia.dias@noaa.gov (ORCID) [contributor] Ron Klasky ronald.klasky@noaa.gov [contributor] Andy Beet andrew.beet@noaa.gov (ORCID) [contributor] Max Grezlik maxwell.grezlik@noaa.gov [contributor]","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.fishing.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Fishing Mortality ‚Äî adjust.fishing","title":"Adjust Fishing Mortality ‚Äî adjust.fishing","text":"Modifies fishing mortality value species particular gear. Parameters can adjusted using function : ForcedEffort, ForcedFRate, ForcedCatch.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.fishing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Fishing Mortality ‚Äî adjust.fishing","text":"","code":"adjust.fishing(   Rsim.scenario,   parameter,   group = NA,   sim.year = 1,   sim.month = 0,   value )"},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.fishing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Fishing Mortality ‚Äî adjust.fishing","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario(). parameter Parameters modified (ForcedEffort,ForcedCatch,ForcedFRate) group Name group whose parameter changed. Valid values found `Group` field object created running rpath() sim.year Year simulation modified.  Can range years. sim.month Month year modified.  set 0, months year modified. value New value parameter.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.fishing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Fishing Mortality ‚Äî adjust.fishing","text":"Returns Rsim.scenario() object new fishing parameter    values.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.fishing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Fishing Mortality ‚Äî adjust.fishing","text":"","code":"# Read in Rpath parameter file and generate balanced model Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) # Change value of forcedFRate for Squids in years 3 through 5 to the value of 2 (for all months) Rsim.scenario.adjusted.fishing <- adjust.fishing(Rsim.scenario,parameter=\"ForcedFRate\",group=\"cod\",sim.year=3:5,value = 2) head(Rsim.scenario.adjusted.fishing$fishing$ForcedFRate)     #>   Outside whales seals cod whiting mackerel anchovy shrimp benthos zooplankton #> 1       0      0     0   0       0        0       0      0       0           0 #> 2       0      0     0   0       0        0       0      0       0           0 #> 3       0      0     0   2       0        0       0      0       0           0 #> 4       0      0     0   2       0        0       0      0       0           0 #> 5       0      0     0   2       0        0       0      0       0           0 #> 6       0      0     0   0       0        0       0      0       0           0 #>   phytoplankton detritus #> 1             0        0 #> 2             0        0 #> 3             0        0 #> 4             0        0 #> 5             0        0 #> 6             0        0"},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.forcing.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Forcing Parameters ‚Äî adjust.forcing","title":"Adjust Forcing Parameters ‚Äî adjust.forcing","text":"Modifies various forcing parameters rsim scenario object.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.forcing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Forcing Parameters ‚Äî adjust.forcing","text":"","code":"adjust.forcing(   Rsim.scenario,   parameter,   group,   sim.year = 1,   sim.month = 0,   bymonth = F,   value )"},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.forcing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Forcing Parameters ‚Äî adjust.forcing","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario(). parameter Parameters modified (ForcedEffort,ForcedCatch,ForcedFRate) group Name group whose parameter changed. Valid values found `Group` field object created running rpath() sim.year Year simulation modified.  Can range years. sim.month Month year modified.  set 0, months year modified. bymonth Boolean value denotes whether use sim.year/sim.month combo just sim.month sequential vector starting 1. value New value parameter.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.forcing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Forcing Parameters ‚Äî adjust.forcing","text":"Returns Rsim.scenario object new parameter.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.forcing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Forcing Parameters ‚Äî adjust.forcing","text":"","code":"# Read in Rpath parameter file and generate balanced model Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) # Adjust the ForcedPrey parameter for cod in year 1 for all months. Change the value to 10 Rsim.scenario.adjusted <- adjust.forcing(Rsim.scenario, parameter=\"ForcedPrey\",group = \"cod\", sim.year = 1, sim.month=0,value=10)    head(Rsim.scenario.adjusted$forcing$ForcedPrey) #>     Outside whales seals cod whiting mackerel anchovy shrimp benthos #> 1.1       1      1     1  10       1        1       1      1       1 #> 1.2       1      1     1  10       1        1       1      1       1 #> 1.3       1      1     1  10       1        1       1      1       1 #> 1.4       1      1     1  10       1        1       1      1       1 #> 1.5       1      1     1  10       1        1       1      1       1 #> 1.6       1      1     1  10       1        1       1      1       1 #>     zooplankton phytoplankton detritus sealers trawlers seiners bait boats #> 1.1           1             1        1       1        1       1          1 #> 1.2           1             1        1       1        1       1          1 #> 1.3           1             1        1       1        1       1          1 #> 1.4           1             1        1       1        1       1          1 #> 1.5           1             1        1       1        1       1          1 #> 1.6           1             1        1       1        1       1          1 #>     shrimpers #> 1.1         1 #> 1.2         1 #> 1.3         1 #> 1.4         1 #> 1.5         1 #> 1.6         1"},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Rsim.scenario parameters ‚Äî adjust.scenario","title":"Adjust Rsim.scenario parameters ‚Äî adjust.scenario","text":"Modifies various parameters rsim.scenario() object. Parameters can adjusted using function : B_BaseRef, MzeroMort,UnassimRespFrac, ActiveRespFrac, FtimeAdj, FtimeQBOpt, PBopt, NoIntegrate,HandleSelf, ScrambleSelf, QQ, DD, VV, HandleSwitch, PredPredWeight, PreyPreyWeight","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Rsim.scenario parameters ‚Äî adjust.scenario","text":"","code":"adjust.scenario(Rsim.scenario, parameter, group, groupto = NA, value)"},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Rsim.scenario parameters ‚Äî adjust.scenario","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario(). parameter Parameters modified (Choose : B_BaseRef, MzeroMort, UnassimRespFrac, ActiveRespFrac, FtimeAdj, FtimeQBOpt, PBopt, NoIntegrate, HandleSelf, ScrambleSelf, QQ, DD, VV, HandleSwitch, PredPredWeight, PreyPreyWeight) group model group parameter change affect.  Note  value '' affect groups associated `groupto`  variable. Valid values found `Group` field object created running rpath() groupto corresponding group parameter affecting group variable. Required parameters QQ, DD, VV, HandleSwitch,PredPredWeight, PreyPreyWeight value New value parameter.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Rsim.scenario parameters ‚Äî adjust.scenario","text":"Returns rsim.scenario() object new parameter.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/adjust.scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Rsim.scenario parameters ‚Äî adjust.scenario","text":"","code":"# Read in Rpath parameter file and generate balanced model Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) # Adjust the PBopt parameter for cod. Set to value = 2 Rsim.scenario.adjusted <- adjust.scenario(Rsim.scenario, parameter=\"PBopt\",group = \"cod\", groupto = \"all\", value = 2)"},{"path":"https://noaa-edab.github.io/Rpath/reference/check.rpath.params.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Rpath parameter files ‚Äî check.rpath.params","title":"Check Rpath parameter files ‚Äî check.rpath.params","text":"Logical check parameter files filled correctly, .e. data entered expected.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/check.rpath.params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Rpath parameter files ‚Äî check.rpath.params","text":"","code":"check.rpath.params(Rpath.params)"},{"path":"https://noaa-edab.github.io/Rpath/reference/check.rpath.params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Rpath parameter files ‚Äî check.rpath.params","text":"Rpath.params R object containing parameters needed create Rpath model.  generated either create.rpath.params()  read.rpath.params() functions.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/check.rpath.params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Rpath parameter files ‚Äî check.rpath.params","text":"Checks Rpath parameter files consistency.  error message produced one  logical checks fails. Checks include: verification types represented (e.g. consumer, producer, detrital, fleet);  check input parameters entered correctly; check Diet columns sum 1.  (NOTE: ensure data correct just right places).","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/create.rpath.params.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a shell for the Rpath.params object ‚Äî create.rpath.params","title":"Creates a shell for the Rpath.params object ‚Äî create.rpath.params","text":"Creates shell Rpath.params list object contains model, diet, multistanza, pedigree parameters.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/create.rpath.params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a shell for the Rpath.params object ‚Äî create.rpath.params","text":"","code":"create.rpath.params(group, type, stgroup = NA)"},{"path":"https://noaa-edab.github.io/Rpath/reference/create.rpath.params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a shell for the Rpath.params object ‚Äî create.rpath.params","text":"group Vector group names. type Numeric vector group type. Living = 0, Producer = 1, Detritus = 2, Fleet = 3. stgroup Vector multistanza group names.  Include NA non-stanza groups.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/create.rpath.params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a shell for the Rpath.params object ‚Äî create.rpath.params","text":"Outputs list object Rpath.params populated values  NA logical default values.  Values can filled using  R.  Use check.rpath.params() ensure parameter files filled  correctly (NOTE: ensure data correct just  right places).","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/extract.node.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract node/group data from an Rsim run ‚Äî extract.node","title":"Extract node/group data from an Rsim run ‚Äî extract.node","text":"Extracts group/node specific information scenario run using rsim.run()","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/extract.node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract node/group data from an Rsim run ‚Äî extract.node","text":"","code":"extract.node(Rsim.output, group)"},{"path":"https://noaa-edab.github.io/Rpath/reference/extract.node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract node/group data from an Rsim run ‚Äî extract.node","text":"Rsim.output Object generated rsim.run(). group Name node/group want extract data. Valid values found `Group` field object created running rpath()","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/extract.node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract node/group data from an Rsim run ‚Äî extract.node","text":"Returns list object monthly node specific data Biomass Vector monthly Biomass values AnnualBiomass Vector annual Biomass TotalCatch Vector monthly Catch values AnnualTotalCatch Vector annual Catch values Landings Dataframe (n x l) monthly Landings. (column fishery Lands `group`) Discards Dataframe (n x d) monthly Discards (column fishery Discards `group`)","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/extract.node.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract node/group data from an Rsim run ‚Äî extract.node","text":"","code":"# Read in Rpath parameter file and balance model Rpath <- rpath(Ecosense.EBS) # Create a 50 yr Rpath scenario Rsim.scenario <- rsim.scenario(Rpath, Ecosense.EBS, years = 1:50) # Run a scenario Rsim.output <- rsim.run(Rsim.scenario, method = \"RK4\", years = 1:50) # Extracts group (node) specific data from the simulation run group <- extract.node(Rsim.output,Rpath$Group['Squids'])"},{"path":"https://noaa-edab.github.io/Rpath/reference/frate.table.html","id":null,"dir":"Reference","previous_headings":"","what":"Fishing Mortality Table ‚Äî frate.table","title":"Fishing Mortality Table ‚Äî frate.table","text":"Creates table fishing mortalities species group gear rsim.scenario() object.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/frate.table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fishing Mortality Table ‚Äî frate.table","text":"","code":"frate.table(Rsim.scenario)"},{"path":"https://noaa-edab.github.io/Rpath/reference/frate.table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fishing Mortality Table ‚Äî frate.table","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario().","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/frate.table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fishing Mortality Table ‚Äî frate.table","text":"Returns data table F values species/gear combination. Group Group/node Fishery/gearType Gear type fishery ... Total Sum gear types","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/frate.table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fishing Mortality Table ‚Äî frate.table","text":"","code":"# Read in Rpath parameter file and generate balanced model Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) rates <- frate.table(Rsim.scenario) # display the head of the data frame head(rates) #>       Group    sealers  trawlers   seiners bait boats shrimpers      Total #>      <char>      <num>     <num>     <num>      <num>     <num>      <num> #> 1:    seals 0.07389163 0.0000000 0.0000000 0.00000000    0.0000 0.07389163 #> 2:      cod 0.00000000 0.1500000 0.0000000 0.00000000    0.0000 0.15000000 #> 3:  whiting 0.00000000 0.1111111 0.0000000 0.00000000    0.0000 0.11111111 #> 4: mackerel 0.00000000 0.0000000 0.3333333 0.00000000    0.0000 0.33333333 #> 5:  anchovy 0.00000000 0.0000000 0.1714286 0.02857143    0.0000 0.20000000 #> 6:   shrimp 0.00000000 0.0000000 0.0000000 0.00000000    0.0625 0.06250000"},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.fishing.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve fishing forcing parameters from an Rsim scenario ‚Äî get.rsim.fishing","title":"Retrieve fishing forcing parameters from an Rsim scenario ‚Äî get.rsim.fishing","text":"Helper function retrieve fishing forcing parameters used Rsim scenario","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.fishing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve fishing forcing parameters from an Rsim scenario ‚Äî get.rsim.fishing","text":"","code":"get.rsim.fishing(Rsim.scenario)"},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.fishing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve fishing forcing parameters from an Rsim scenario ‚Äî get.rsim.fishing","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario().","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.fishing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve fishing forcing parameters from an Rsim scenario ‚Äî get.rsim.fishing","text":"Returns `fishing` object.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.fishing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve fishing forcing parameters from an Rsim scenario ‚Äî get.rsim.fishing","text":"","code":"# Read in Rpath parameter file and generate balanced model Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) params <- get.rsim.fishing(Rsim.scenario) names(params) #> [1] \"ForcedEffort\" \"ForcedFRate\"  \"ForcedCatch\""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.forcing.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve forcing parameters from an Rsim scenario ‚Äî get.rsim.forcing","title":"Retrieve forcing parameters from an Rsim scenario ‚Äî get.rsim.forcing","text":"Helper function retrieve forcing parameters used Rsim scenario","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.forcing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve forcing parameters from an Rsim scenario ‚Äî get.rsim.forcing","text":"","code":"get.rsim.forcing(Rsim.scenario)"},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.forcing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve forcing parameters from an Rsim scenario ‚Äî get.rsim.forcing","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario().","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.forcing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve forcing parameters from an Rsim scenario ‚Äî get.rsim.forcing","text":"Returns `forcing` object.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.forcing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve forcing parameters from an Rsim scenario ‚Äî get.rsim.forcing","text":"","code":"# Read in Rpath parameter file and generate balanced model Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) params <- get.rsim.forcing(Rsim.scenario) names(params) #> [1] \"ForcedPrey\"    \"ForcedMort\"    \"ForcedRecs\"    \"ForcedSearch\"  #> [5] \"ForcedActresp\" \"ForcedMigrate\" \"ForcedBio\""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.params.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve parameters from an Rsim scenario ‚Äî get.rsim.params","title":"Retrieve parameters from an Rsim scenario ‚Äî get.rsim.params","text":"Helper function retrieve parameters used Rsim scenario","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve parameters from an Rsim scenario ‚Äî get.rsim.params","text":"","code":"get.rsim.params(Rsim.scenario)"},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve parameters from an Rsim scenario ‚Äî get.rsim.params","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario().","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve parameters from an Rsim scenario ‚Äî get.rsim.params","text":"Returns `params` object.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve parameters from an Rsim scenario ‚Äî get.rsim.params","text":"","code":"# Read in Rpath parameter file and generate balanced model Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) params <- get.rsim.params(Rsim.scenario) names(params) #>  [1] \"NUM_GROUPS\"       \"NUM_LIVING\"       \"NUM_DEAD\"         \"NUM_GEARS\"        #>  [5] \"NUM_BIO\"          \"spname\"           \"spnum\"            \"B_BaseRef\"        #>  [9] \"MzeroMort\"        \"UnassimRespFrac\"  \"ActiveRespFrac\"   \"FtimeAdj\"         #> [13] \"FtimeQBOpt\"       \"PBopt\"            \"NoIntegrate\"      \"HandleSelf\"       #> [17] \"ScrambleSelf\"     \"PreyFrom\"         \"PreyTo\"           \"QQ\"               #> [21] \"DD\"               \"VV\"               \"HandleSwitch\"     \"PredPredWeight\"   #> [25] \"PreyPreyWeight\"   \"NumPredPreyLinks\" \"FishFrom\"         \"FishThrough\"      #> [29] \"FishQ\"            \"FishTo\"           \"NumFishingLinks\"  \"DetFrac\"          #> [33] \"DetFrom\"          \"DetTo\"            \"NumDetLinks\"      \"BURN_YEARS\"       #> [37] \"COUPLED\"          \"RK4_STEPS\"        \"SENSE_LIMIT\""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.stanzas.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve stanza parameters from an Rsim scenario ‚Äî get.rsim.stanzas","title":"Retrieve stanza parameters from an Rsim scenario ‚Äî get.rsim.stanzas","text":"Helper function retrieve stanza parameters used Rsim scenario","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.stanzas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve stanza parameters from an Rsim scenario ‚Äî get.rsim.stanzas","text":"","code":"get.rsim.stanzas(Rsim.scenario)"},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.stanzas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve stanza parameters from an Rsim scenario ‚Äî get.rsim.stanzas","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario().","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.stanzas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve stanza parameters from an Rsim scenario ‚Äî get.rsim.stanzas","text":"Returns `stanzas` object.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.stanzas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve stanza parameters from an Rsim scenario ‚Äî get.rsim.stanzas","text":"","code":"# Read in Rpath parameter file and generate balanced model Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) params <- get.rsim.stanzas(Rsim.scenario) names(params) #>  [1] \"Nsplit\"         \"Nstanzas\"       \"EcopathCode\"    \"Age1\"           #>  [5] \"Age2\"           \"baseWageS\"      \"baseNageS\"      \"baseQageS\"      #>  [9] \"Wmat\"           \"RecPower\"       \"recruits\"       \"VBGFd\"          #> [13] \"RzeroS\"         \"vBM\"            \"baseEggsStanza\" \"SplitAlpha\"     #> [17] \"SpawnX\"         \"SpawnEnergy\"    \"baseSpawnBio\"   \"RscaleSplit\"    #> [21] \"baseStanzaPred\""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.start_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve starting state values from an Rsim scenario ‚Äî get.rsim.start_state","title":"Retrieve starting state values from an Rsim scenario ‚Äî get.rsim.start_state","text":"Helper function retrieve starting state values used Rsim scenario","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.start_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve starting state values from an Rsim scenario ‚Äî get.rsim.start_state","text":"","code":"get.rsim.start_state(Rsim.scenario)"},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.start_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve starting state values from an Rsim scenario ‚Äî get.rsim.start_state","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario().","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.start_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve starting state values from an Rsim scenario ‚Äî get.rsim.start_state","text":"Returns `start_state` object.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/get.rsim.start_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve starting state values from an Rsim scenario ‚Äî get.rsim.start_state","text":"","code":"# Read in Rpath parameter file and generate balanced model Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) params <- get.rsim.start_state(Rsim.scenario) names(params)  #> [1] \"Biomass\"    \"N\"          \"Ftime\"      \"SpawnBio\"   \"StanzaPred\" #> [6] \"EggsStanza\" \"NageS\"      \"WageS\"      \"QageS\""},{"path":"https://noaa-edab.github.io/Rpath/reference/ggwebplot.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot routine for Rpath food web ‚Äî ggwebplot","title":"ggplot routine for Rpath food web ‚Äî ggwebplot","text":"Plots food web associated Rpath object using ggplot functions","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/ggwebplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot routine for Rpath food web ‚Äî ggwebplot","text":"","code":"ggwebplot(   Rpath.obj,   eco.name = attr(Rpath.obj, \"eco.name\"),   line.col = \"grey\",   highlight = NULL,   highlight.col = c(\"black\", \"red\", \"orange\"),   labels = FALSE,   label.num = FALSE,   label.cex = 1,   fleets = FALSE,   type.col = \"grey50\",   box.order = NULL,   line.alpha = 0.5,   point.size = 1,   text.size = 5,   max.overlaps = 10 )"},{"path":"https://noaa-edab.github.io/Rpath/reference/ggwebplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot routine for Rpath food web ‚Äî ggwebplot","text":"Rpath.obj Rpath model created rpath() function. eco.name Optional name ecosystem. Default `eco.name` attribute rpath object. line.col color lines nodes food web. highlight Set group number name highlight connections group. Valid values found `Group` field object created running rpath(). highlight.col Color connections highlighted group, vector length 3. Defaults black = predator, red = prey, orange = fleet. labels Logical whether display group names. label.num Logical whether display group numbers instead points nodes. TRUE, type.col must length 1, 4. label.cex Numeric value relative size labels within plot. fleets Logical value indicating whether include fishing fleets food web. type.col color points corresponding types group.  Can either length 1 4. Color order living, primary producers, detrital, fleet groups. box.order Vector box numbers change default plot order. Must include box numbers. Passed summarize..webplot() line.alpha Transparency lines nodes food web. point.size Size points nodes. text.size Size text max.overlaps Maximum number overlaps allowed group labels ggrepel","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/ggwebplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot routine for Rpath food web ‚Äî ggwebplot","text":"Returns ggplot object visualizing food web","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/ggwebplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot routine for Rpath food web ‚Äî ggwebplot","text":"","code":"# Read in Rpath parameter file, generate and name model object Rpath.obj <- rpath(AB.params, eco.name = \"Anchovy Bay\") # Plot food web diagram with all groups labeled, including fleets, using ggplot ggwebplot(Rpath.obj, labels = TRUE, fleets = TRUE)  # Plot food web diagram without labels, highlighting connections of cod group ggwebplot(Rpath.obj, highlight = \"cod\",fleets = TRUE)"},{"path":"https://noaa-edab.github.io/Rpath/reference/read.rpath.params.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Rpath parameters from .csv files ‚Äî read.rpath.params","title":"Read Rpath parameters from .csv files ‚Äî read.rpath.params","text":"Creates Rpath.param object series .csv files.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/read.rpath.params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Rpath parameters from .csv files ‚Äî read.rpath.params","text":"","code":"read.rpath.params(   modfile,   dietfile,   pedfile = NA,   stanzagroupfile = NA,   stanzafile = NA )"},{"path":"https://noaa-edab.github.io/Rpath/reference/read.rpath.params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Rpath parameters from .csv files ‚Äî read.rpath.params","text":"modfile file location flat file containing model parameters. dietfile file location flat file containing diet parameters. pedfile file location flat file containing pedgigree parameters. stanzagroupfile file location flat file containing group parameters multistanza groups. specified blank stanza list created. stanzafile file location flat file containing individual stanza parameters multistanza groups. specified blank stanza list created.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/read.rpath.params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Rpath parameters from .csv files ‚Äî read.rpath.params","text":"Outputs Rpath.param object can used Rpath subsequently  Rsim.  (NOTE: function ensure data correct  correct locations.Run check.rpath.param() ensure appropriate columns  present).","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.consumers.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Rpath consumer groups ‚Äî rpath.consumers","title":"List of Rpath consumer groups ‚Äî rpath.consumers","text":"List consumer groups Rpath object species type = 0.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.consumers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Rpath consumer groups ‚Äî rpath.consumers","text":"","code":"rpath.consumers(Rpath)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.consumers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Rpath consumer groups ‚Äî rpath.consumers","text":"Rpath Balanced Rpath model generated rpath()","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.consumers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of Rpath consumer groups ‚Äî rpath.consumers","text":"Returns string vector containing names Rpath functional groups consumers","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.consumers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Rpath consumer groups ‚Äî rpath.consumers","text":"","code":"# Build the balanced Rpath model and parameter file by calling `rpath` Rpath <- rpath(Ecosense.EBS) # Run the consumers command consumerGroups = rpath.consumers(Rpath) # Print out the first few consumer group names head(consumerGroups) #> [1] \"Toothed whales\"      \"Gray whales\"         \"Other baleen\"        #> [4] \"Bowhead whales\"      \"Other pinnipeds\"     \"Walrus/bearded seal\""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.detrital.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Rpath detrital groups ‚Äî rpath.detrital","title":"List of Rpath detrital groups ‚Äî rpath.detrital","text":"List detrital groups Rpath object species type = 2","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.detrital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Rpath detrital groups ‚Äî rpath.detrital","text":"","code":"rpath.detrital(Rpath)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.detrital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Rpath detrital groups ‚Äî rpath.detrital","text":"Rpath Balanced Rpath model generated rpath()","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.detrital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of Rpath detrital groups ‚Äî rpath.detrital","text":"Returns string vector containing names Rpath functional groups detrital.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.detrital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Rpath detrital groups ‚Äî rpath.detrital","text":"","code":"# Build the balanced Rpath model and parameter file by calling `rpath` Rpath <- rpath(Ecosense.EBS) # Run the rpath.detrital command detritalGroups = rpath.detrital(Rpath) # Print out the first few detrital group names head(detritalGroups) #> [1] \"Pelagic detritus\" \"Benthic detritus\""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.gears.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Rpath gears groups ‚Äî rpath.gears","title":"List of Rpath gears groups ‚Äî rpath.gears","text":"List gears groups Rpath object species type = 3","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.gears.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Rpath gears groups ‚Äî rpath.gears","text":"","code":"rpath.gears(Rpath)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.gears.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Rpath gears groups ‚Äî rpath.gears","text":"Rpath Balanced Rpath model generated rpath()","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.gears.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of Rpath gears groups ‚Äî rpath.gears","text":"Returns string vector containing names Rpath functional groups gear types","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.gears.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Rpath gears groups ‚Äî rpath.gears","text":"","code":"# Build the balanced Rpath model and parameter file by calling `rpath` Rpath <- rpath(Ecosense.EBS) # Run the groups command gearGroups = rpath.gears(Rpath) # Print out the first few gear type group names head(gearGroups) #> [1] \"Fishery/Subsistence\""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Rpath functional group names ‚Äî rpath.groups","title":"Rpath functional group names ‚Äî rpath.groups","text":"Get character vector functional group names Rpath object (balanced model) Rpath.params object (unbalanced model parameters) based 'type' input parameter follows: (0: consumers, 1: producers, 2: detrital, 3: gears, 0<type<1: mixotrophs). Living groups consumers + producers.  Note mixotrophs returned either consumers producers, separately.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rpath functional group names ‚Äî rpath.groups","text":"","code":"rpath.groups(Rpath)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rpath functional group names ‚Äî rpath.groups","text":"Rpath Balanced Rpath model generated rpath()","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rpath functional group names ‚Äî rpath.groups","text":"Returns string vector containing names Rpath functional groups category (group type).","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rpath functional group names ‚Äî rpath.groups","text":"","code":"# Build the balanced Rpath model and parameter file by calling `rpath` Rpath <- rpath(Ecosense.EBS) # Run the groups command groups = rpath.groups(Rpath) # Print out the first few group names head(groups) #> [1] \"Toothed whales\"      \"Gray whales\"         \"Other baleen\"        #> [4] \"Bowhead whales\"      \"Other pinnipeds\"     \"Walrus/bearded seal\""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Ecopath module of Rpath ‚Äî rpath","title":"Ecopath module of Rpath ‚Äî rpath","text":"Performs initial mass balance using Rpath.params() file","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ecopath module of Rpath ‚Äî rpath","text":"","code":"rpath(Rpath.params, eco.name = NA, eco.area = 1)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ecopath module of Rpath ‚Äî rpath","text":"Rpath.params R object containing parameters needed create Rpath model.  generated either create.rpath.params()  read.rpath.params() functions. eco.name Optional name ecosystem becomes attribute Rpath model. eco.area Optional area ecosystem becomes attribute Rpath model.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ecopath module of Rpath ‚Äî rpath","text":"Returns static Rpath model can supplied rsim.scenario function.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.living.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Rpath living groups ‚Äî rpath.living","title":"List of Rpath living groups ‚Äî rpath.living","text":"List living groups Rpath object. Living groups species groups type < 2.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.living.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Rpath living groups ‚Äî rpath.living","text":"","code":"rpath.living(Rpath)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.living.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Rpath living groups ‚Äî rpath.living","text":"Rpath Balanced Rpath model generated rpath()","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.living.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of Rpath living groups ‚Äî rpath.living","text":"Returns string vector containing names Rpath functional groups living.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.living.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Rpath living groups ‚Äî rpath.living","text":"","code":"# Build the balanced Rpath model and parameter file by calling `rpath` Rpath <- rpath(Ecosense.EBS) # Run the rpath.living command livingGroups = rpath.living(Rpath) # Print out the first few living group names head(livingGroups) #> [1] \"Toothed whales\"      \"Gray whales\"         \"Other baleen\"        #> [4] \"Bowhead whales\"      \"Other pinnipeds\"     \"Walrus/bearded seal\""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.mixotrophs.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Rpath mixotroph groups ‚Äî rpath.mixotrophs","title":"List of Rpath mixotroph groups ‚Äî rpath.mixotrophs","text":"List groups Rpath object species type 0 1","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.mixotrophs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Rpath mixotroph groups ‚Äî rpath.mixotrophs","text":"","code":"rpath.mixotrophs(Rpath)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.mixotrophs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Rpath mixotroph groups ‚Äî rpath.mixotrophs","text":"Rpath Balanced Rpath model generated rpath()","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.mixotrophs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of Rpath mixotroph groups ‚Äî rpath.mixotrophs","text":"Returns string vector containing names Rpath functional groups mixotrophs","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.mixotrophs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Rpath mixotroph groups ‚Äî rpath.mixotrophs","text":"","code":"# Build the balanced Rpath model and parameter file by calling `rpath` Rpath <- rpath(Ecosense.EBS) # Run the groups command mixotrophGroups = rpath.mixotrophs(Rpath) # Print out the first few mixotroph group names head(mixotrophGroups) #> character(0)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.producers.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Rpath producer groups ‚Äî rpath.producers","title":"List of Rpath producer groups ‚Äî rpath.producers","text":"List producer groups Rpath object species type = 1","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.producers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Rpath producer groups ‚Äî rpath.producers","text":"","code":"rpath.producers(Rpath)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.producers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Rpath producer groups ‚Äî rpath.producers","text":"Rpath Balanced Rpath model generated rpath()","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.producers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of Rpath producer groups ‚Äî rpath.producers","text":"Returns string vector containing names Rpath functional groups producers","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.producers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Rpath producer groups ‚Äî rpath.producers","text":"","code":"# Build the balanced Rpath model and parameter file by calling `rpath` Rpath <- rpath(Ecosense.EBS) # Run the groups command producerGroups = rpath.producers(Rpath) # Print out the first few producer group names head(producerGroups) #> [1] \"Primary production\""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.stanzas.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate biomass and consumption for multistanza groups ‚Äî rpath.stanzas","title":"Calculate biomass and consumption for multistanza groups ‚Äî rpath.stanzas","text":"Uses leading stanza calculate biomass consumption stanzas necessary support leading stanza.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.stanzas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate biomass and consumption for multistanza groups ‚Äî rpath.stanzas","text":"","code":"rpath.stanzas(Rpath.params)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.stanzas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate biomass and consumption for multistanza groups ‚Äî rpath.stanzas","text":"Rpath.params R object containing parameters needed create Rpath model.  generated either create.rpath.params()  read.rpath.params() functions.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rpath.stanzas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate biomass and consumption for multistanza groups ‚Äî rpath.stanzas","text":"Calculates adds biomass consumption trailing stanza groups.  Also adds weight age number age multi-staza groups.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.deriv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the derivatives for a time step ‚Äî rsim.deriv","title":"Calculate the derivatives for a time step ‚Äî rsim.deriv","text":"Calculates derivative single time step saves output","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.deriv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the derivatives for a time step ‚Äî rsim.deriv","text":"","code":"rsim.deriv(Rsim.scenario, sim.year = 0, sim.month = 0, tstep = 0)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.deriv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the derivatives for a time step ‚Äî rsim.deriv","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario(). sim.year inherit apply functions sim.month inherit apply functions tstep Sub-monthly time step usually set 0.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.deriv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the derivatives for a time step ‚Äî rsim.deriv","text":"data.frame object model group (rows) values 12 derivatives (columns): Species, character names model groups DerivT, numeric net flow; Total Gain - Total Loss timestep TotGain, numeric Total Gain, flows group timestep TotLoss, numeric Total Loss, flows group timestep FoodGain, numeric flows group consuming prey timestep DetritalGain, numeric flows group detritus timestep FishingGain, numeric flows group fishing timestep UnAssimLoss, numeric flows group due unassimilated consumption timestep ActiveRespLoss, numeric flows group due \"heat loss\" timtestep FoodLoss, numeric flows group consumed predators timestep MzeroLoss, numeric flows group due unaccounted mortality timestep FishingLoss, numeric flows group due fishing timestep DetritalLoss, numeric flows group detritus timestep","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.deriv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the derivatives for a time step ‚Äî rsim.deriv","text":"","code":"# Read in Rpath parameter file and generate model object Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) # Calculate derivatives for year 2, month 6, first timestep Rsim.deriv <- rsim.deriv(Rsim.scenario, sim.year=2, sim.month = 6, tstep = 0)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.diet.html","id":null,"dir":"Reference","previous_headings":"","what":"Output consumption of each prey by an individual predator group from Rsim run ‚Äî rsim.diet","title":"Output consumption of each prey by an individual predator group from Rsim run ‚Äî rsim.diet","text":"Extracts matrix consumption (model biomass units) prey time particular predator Rsim model output rsim.run().","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.diet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output consumption of each prey by an individual predator group from Rsim run ‚Äî rsim.diet","text":"","code":"rsim.diet(Rsim.output, group)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.diet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output consumption of each prey by an individual predator group from Rsim run ‚Äî rsim.diet","text":"Rsim.output R object containing output rsim.run. group Predator group Rpath model interest","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.diet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output consumption of each prey by an individual predator group from Rsim run ‚Äî rsim.diet","text":"numeric matrix annual (rows) consumption prey group (columns)","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.diet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output consumption of each prey by an individual predator group from Rsim run ‚Äî rsim.diet","text":"","code":"# Read in Rpath parameter file and generate model object Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) # Run the Rsim simulation Rsim.output <- rsim.run(Rsim.scenario, method = \"RK4\", years = 1:50) # Extract a preadator's consumption of each prey over the model run Rsim.diet.whales <- rsim.diet(Rsim.output, group = \"whales\")"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.fishing.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize fishing matrix for Rsim scenario ‚Äî rsim.fishing","title":"Initialize fishing matrix for Rsim scenario ‚Äî rsim.fishing","text":"Creates matrix forcing functions related fishing: (ForcedEffort, ForcedFRate, ForcedCatch). Default values set 1 ForcedEffort, 0 ForcedFRate, ForcedCatch timesteps groups.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.fishing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize fishing matrix for Rsim scenario ‚Äî rsim.fishing","text":"","code":"rsim.fishing(params, years)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.fishing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize fishing matrix for Rsim scenario ‚Äî rsim.fishing","text":"params Rsim parameter object generated rsim.params. years vector year simulation.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.fishing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize fishing matrix for Rsim scenario ‚Äî rsim.fishing","text":"S3 object class Rsim.fishing, list 3 objects: ForcedEffort, numeric matrix monthly (rows) effort multiplier fleet (columns) ForcedFRate, numeric matrix annual (rows) fishing mortality rate biomass group (columns) ForcedEffort, numeric matrix annual (rows) total catch removal biomass group (columns)","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.fishing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize fishing matrix for Rsim scenario ‚Äî rsim.fishing","text":"","code":"# Read in Rpath parameter file and generate model object Rpath <- rpath(AB.params) # Create dynamic parameters from Rpath model Rsim.params <- rsim.params(Rpath) # Create fishing matrix with default values Rsim.fishing <- rsim.fishing(Rsim.params, years = 1:50)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.forcing.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize forcing matrix for Rsim scenario ‚Äî rsim.forcing","title":"Initialize forcing matrix for Rsim scenario ‚Äî rsim.forcing","text":"Creates matrix forcing functions related fishing (ForcedPrey ForcedMort, ForcedRecs, ForcedSearch, ForcedActResp, ForcedMigrate, ForcedBio). Default values set 1 ForcedPrey ForcedMort, ForcedRecs, ForcedSearch ForcedActResp, 0 ForcedMigrate -1 ForcedBio timesteps groups.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.forcing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize forcing matrix for Rsim scenario ‚Äî rsim.forcing","text":"","code":"rsim.forcing(params, years)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.forcing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize forcing matrix for Rsim scenario ‚Äî rsim.forcing","text":"params Rsim parameter object generated rsim.params. years vector year simulation.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.forcing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize forcing matrix for Rsim scenario ‚Äî rsim.forcing","text":"S3 object class Rsim.forcing, list 7 objects: ForcedPrey, numeric matrix monthly (rows) prey forcing biomass group (columns) ForcedMort, numeric matrix monthly (rows) mortality multiplier biomass group (columns) ForcedRecs, numeric matrix monthly (rows) recruitment multiplier biomass group (columns) ForcedSearch, numeric matrix monthly (rows) search rate multiplier biomass group (columns) ForcedActresp, numeric matrix monthly (rows) active respiration multiplier biomass group (columns) ForcedMigrate, numeric matrix monthly (rows) migration forcing biomass group (columns) ForcedBio, numeric matrix monthly (rows) biomass multiplier biomass group (columns)","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.forcing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize forcing matrix for Rsim scenario ‚Äî rsim.forcing","text":"","code":"# Read in Rpath parameter file and generate model object Rpath <- rpath(AB.params) # Create dynamic parameters from Rpath model Rsim.params <- rsim.params(Rpath) # Create forcing matrix with default values Rsim.forcing <- rsim.forcing(Rsim.params, years = 1:50)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.mort.html","id":null,"dir":"Reference","previous_headings":"","what":"Output biomass removed by each predator for an individual prey group from Rsim run ‚Äî rsim.mort","title":"Output biomass removed by each predator for an individual prey group from Rsim run ‚Äî rsim.mort","text":"Extracts matrix biomass removed (model biomass units) particular prey predators Rsim model output rsim.run().","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.mort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output biomass removed by each predator for an individual prey group from Rsim run ‚Äî rsim.mort","text":"","code":"rsim.mort(Rsim.output, group)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.mort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output biomass removed by each predator for an individual prey group from Rsim run ‚Äî rsim.mort","text":"Rsim.output R object containing output rsim.run. group Predator group Rpath model interest","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.mort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output biomass removed by each predator for an individual prey group from Rsim run ‚Äî rsim.mort","text":"numeric matrix annual (rows) biomass removed predator group (columns)","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.mort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output biomass removed by each predator for an individual prey group from Rsim run ‚Äî rsim.mort","text":"","code":"# Read in Rpath parameter file and generate model object Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) # Run the Rsim simulation Rsim.output <- rsim.run(Rsim.scenario, method = \"RK4\", years = 1:50) # Extract a prey's biomass loss from each predator over the model run Rsim.mort.anchovy <- rsim.mort(Rsim.output, group = \"anchovy\")"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.params.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial set up for Rsim dynamic simulation ‚Äî rsim.params","title":"Initial set up for Rsim dynamic simulation ‚Äî rsim.params","text":"Converts outputs Rpath rates use Rsim.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial set up for Rsim dynamic simulation ‚Äî rsim.params","text":"","code":"rsim.params(   Rpath,   mscramble = 2,   mhandle = 1000,   preyswitch = 1,   scrambleselfwt = 0,   handleselfwt = 0,   steps_yr = 12,   steps_m = 1 )"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial set up for Rsim dynamic simulation ‚Äî rsim.params","text":"Rpath R object containing static Rpath model. mscramble Base value vulnerability functional response; default = 2 (mixed response). mhandle Base value handling time functional response; default = 1000 (). preyswitch Exponent prey switching functional response; default = 1 (). scrambleselfwt Value 1 indicates predators overlap foraging arena 0 treats predators individually. handleselfwt Value 1 indicates prey overlap arena contribute saturation 0 treats prey individually. steps_yr Number time steps per year; default = 12. steps_m Number time steps per month; default = 1.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial set up for Rsim dynamic simulation ‚Äî rsim.params","text":"Returns object class Rsim.params, list 39 objects passed rsim.run    function via rsim.scenario function. NUM_GROUPS, number total model groups NUM_LIVING, number living model groups NUM_DEAD, number detritus model groups NUM_GEARS, number fishery model groups NUM_BIO, number living + detritus model groups spname, named NUM_GROUPS+1 length character vector beginning \"Outside\" containing names model groups spnum, named NUM_GROUPS+1 length character vector beginning \"Outside\" numbered 0, containing numbers model groups B_BaseRef, named NUM_GROUPS+1 length character vector beginning \"Outside\" containing Rpath base biomass model groups MzeroMort, named NUM_GROUPS+1 length character vector beginning \"Outside\" containing unaccounted mortality, calculated PB * (1.0 - EE), model groups UnassimRespFrac, named NUM_GROUPS+1 length character vector beginning \"Outside\" containing proportion consumption goes detritus model groups ActiveRespFrac, named NUM_GROUPS+1 length character vector beginning \"Outside\" containing proportion consumption \"lost heat\" model groups FtimeAdj, named NUM_GROUPS+1 length character vector beginning \"Outside\" containing rate change feeding time, currently set 0 model groups FtimeQBOpt, named NUM_GROUPS+1 length character vector beginning \"Outside\" containing base QB consumer model groups, base PB primary producers PBopt, named NUM_GROUPS+1 length character vector beginning \"Outside\" containing base PB model groups NoIntegrate, named NUM_GROUPS+1 length character vector beginning \"Outside\" containing flag set 0 high turnover model groups set spnum others Handleself, named NUM_GROUPS+1 length character vector beginning \"Outside\" containing flag handling time influence, set model groups function argument handleselfwt, default 0 individual prey handling time Scrambleself, named NUM_GROUPS+1 length character vector beginning \"Outside\" containing flag predator density influence, set model groups function argument scrambleselfwt, default 0 individual predator density dependent predation PreyFrom, numeric vector length NumPredPreyLinks+1, spnum prey predator prey interaction pair model PreyTo, numeric vector length NumPredPreyLinks+1, spnum predator predator prey interaction pair model QQ, numeric vector length NumPredPreyLinks+1, base consumption rate predator prey interaction pair model DD, numeric vector length NumPredPreyLinks+1, handling time effect functional response predator prey pair, set model groups function argument mhandle, default = 1000 VV, numeric vector length NumPredPreyLinks+1, vulnerability effect functional response predator prey pair, set model groups function argument mscramble, default = 2 HandleSwitch, numeric vector length NumPredPreyLinks+1, prey density dependence effect functional response predator prey pair, set model groups function argument preyswitch, default = 1 PredPreyWeight, numeric vector length NumPredPreyLinks+1, relative weight individual predator total predators predator prey pair, used scrambleselfwt>0 PreyPreyWeight, numeric vector length NumPredPreyLinks+1, relative weight individual prey total prey predator prey pair, used handleselfwt>0 NumPredPreyLinks, number predator prey linkages groups model FishFrom, numeric vector length NumFishingLinks+1, spnum landing discard fishery interaction model FishThrough, numeric vector length NumFishingLinks+1, spnum gear type fishery interaction model FishQ, numeric vector length NumFishingLinks+1, landings discards relative base fished group biomass fishery interaction model FishTo, numeric vector length NumFishingLinks+1, spnum sink fishery interaction model (\"Outside\" landings detritus group discards) NumFishingLinks, number model group landings discards fishery links groups model DetFrac, numeric vector length NumDetLinks+1, fraction detritus going DetTo living detritus group model DetFrom, numeric vector length NumDetLinks+1, spnum flowing detritus living detritus group model DetTo, numeric vector length NumDetLinks+1, spnum detritus sink living detritus group model NumDetLinks, number model group links detritus groups model BURN_YEARS, number model run burn-(spin ) years, default value -1 COUPLED, number control species interactions, value 0 allows density dependent non-interacting species, default value 1 RK4_STEPS, number RK4 integration steps per month, default value 4 SENSE_LIMIT, numeric vector multipliers biomass determining acceptable range continuing model run within BURN_YEARS","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initial set up for Rsim dynamic simulation ‚Äî rsim.params","text":"","code":"# Read in Rpath parameter file and generate model object Rpath <- rpath(AB.params) # Create default dynamic parameters from Rpath model Rsim.params <- rsim.params(Rpath)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot routine for Rsim runs ‚Äî rsim.plot","title":"Plot routine for Rsim runs ‚Äî rsim.plot","text":"Plots relative biomass group Rsim.output object.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot routine for Rsim runs ‚Äî rsim.plot","text":"","code":"rsim.plot(Rsim.output, spname = \"all\", indplot = F)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot routine for Rsim runs ‚Äî rsim.plot","text":"Rsim.output R object containing output rsim.run(). spname Vector species names displayed.  default \"\" display group names indplot Logical value whether plot single group multiple groups","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot routine for Rsim runs ‚Äî rsim.plot","text":"Creates figure relative biomass","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot routine for Rsim runs ‚Äî rsim.plot","text":"detailed example use plot command please see vignette(\"RunRsim\")","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a dynamic simulation ‚Äî rsim.run","title":"Run a dynamic simulation ‚Äî rsim.run","text":"Carries numerical integration Rsim alogrithms.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a dynamic simulation ‚Äî rsim.run","text":"","code":"rsim.run(Rsim.scenario, method = \"RK4\", years = 1:100)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a dynamic simulation ‚Äî rsim.run","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario(). method Numerical integration method. Either 'AB' Adams-Bashforth 'RK4' 4th order Runge-Kutta. years vector year simulation.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a dynamic simulation ‚Äî rsim.run","text":"S3 object class Rsim.output, list 16 objects: out_Biomass, numeric matrix monthly (rows) output biomass values biomass group (columns) model run out_Catch, numeric matrix monthly (rows) output catch values biomass group (columns) model run out_Gear_Catch, numeric matrix monthly (rows) output catch species/gear/disposition (columns) model run annual_Catch, numeric matrix annual (rows) output catch values biomass group (columns) model run annual_Biomass, numeric matrix annual (rows) output biomass values biomass group (columns) model run annual_QB, numeric matrix annual (rows) output consumption:biomass values biomass group (columns) model run annual_Qlink, numeric matrix annual (rows) output consumption values predator-prey pair (columns) model run end_state, list 9 final value vectors biomass groups, components produced rsim.state() crash_year, integer flag; -1 crash year model crash pred, named character vector predators predator prey pair prey, named character vector prey predator prey pair Gear_Catch_sp, named character vector species caught gears disposition Gear_Catch_gear, named character vector gear types species disposition Gear_Catch_disp, character vector catch disposition (Landing Discard) species gear start_state, list 9 initial value vectors biomass groups, see output rsim.state() params, list 4; 3 dimensioning parameters 1 biomass group fleet name vector","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a dynamic simulation ‚Äî rsim.run","text":"","code":"# Read in Rpath parameter file and generate model object Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) # Run the Rsim simulation Rsim.output <- rsim.run(Rsim.scenario, method = \"RK4\", years = 1:50)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a dynamic simulation scenario ‚Äî rsim.scenario","title":"Specify a dynamic simulation scenario ‚Äî rsim.scenario","text":"Uses static Rpath model creates scenario consisting 5 list objects: params generated rsim.params(), start_state generated rsim.state(), forcing generated rsim.forcing(), fishing generated rsim.fishing(), 'stanzas generated rsim.stanzas().","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a dynamic simulation scenario ‚Äî rsim.scenario","text":"","code":"rsim.scenario(Rpath, Rpath.params, years = 1:100)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a dynamic simulation scenario ‚Äî rsim.scenario","text":"Rpath R object containing static Rpath model. Rpath.params R object containing parameters needed create Rpath model.  generated either create.rpath.params()  read.rpath.params() functions. years vector year simulation.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a dynamic simulation scenario ‚Äî rsim.scenario","text":"Returns Rsim.scenario object can supplied rsim.run() function. Rsim.scenario list 5 objects: params, list 39 dynamic parameters vectors derived Rpath model, see output rsim.params() start_state, list 9 initial value vectors biomass size structured stanza groups, see output rsim.state() rsim.stanzas() forcing, list 7 matrices time series forcing biological attributes, see output rsim.forcing() fishing, list 3 matrices time series forcing fishing attributes, see output rsim.fishing() stanzas, list 21 parameters vectors age structured groups, see output rsim.stanzas()","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a dynamic simulation scenario ‚Äî rsim.scenario","text":"","code":"# Read in Rpath parameter file and generate model object Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.sense.html","id":null,"dir":"Reference","previous_headings":"","what":"Ecosense function for Rpath ‚Äî rsim.sense","title":"Ecosense function for Rpath ‚Äî rsim.sense","text":"rsim.sense() draws random Rsim parameter set distributions centered supplied Rpath parameter estimates. width distribution parameter defined data pedigree Rpath.params object generated either create.rpath.params() read.rpath.params(). returned Rsim parameter set functionally equivalent params list object created rsim.scenario().","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.sense.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ecosense function for Rpath ‚Äî rsim.sense","text":"","code":"rsim.sense(Rsim.scenario, Rpath.params, Vvary = c(0, 0), Dvary = c(0, 0))"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.sense.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ecosense function for Rpath ‚Äî rsim.sense","text":"Rsim.scenario rsim.scenario() object containing initial rsim parameters used center distributions (base model) random parameter generation. Rpath.params Rpath parameter object (unbalanced model) containing data pedigree generated either create.rpath.params() read.rpath.params(). Vvary length-2 vector (lower,upper) bounds vulnerability parameters generated log-space - 1, Vvary = log(X-1). Thus, Walters et al. 1997 vulnerability range (1,+inf) centered 2 now becomes (-inf,+inf) centered 0. Dvary length-2 vector (lower,upper) bounds handling time generation log-space - 1. Scaled Vvary, (-inf,+inf), centered 0.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.sense.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ecosense function for Rpath ‚Äî rsim.sense","text":"Returns params list object can substituted  params list rsim.scenario object.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.sense.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ecosense function for Rpath ‚Äî rsim.sense","text":"Walters C, Christensen V, Pauly D (1997) Structuring dynamic  models exploited ecosystems trophic mass-balance assessments. Rev  Fish Biol Fish 7:139-172. doi:10.1023/:1018479526149 Whitehouse GA, Aydin KY (2020) Assessing sensitivity three Alaska  marine food webs perturbations: example Ecosim simulations using  Rpath. Ecol Model 429:16. doi:10.1016/j.ecolmodel.2020.109074","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.sense.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ecosense function for Rpath ‚Äî rsim.sense","text":"","code":"# Read in Rpath parameter file and balance model EBS_bal <- rpath(Ecosense.EBS) # Create a 100 yr Rsim scenario EBS_scene <- rsim.scenario(EBS_bal, Ecosense.EBS, years = 1:100) # Generate a new params list new_EBS_params <- rsim.sense(EBS_scene, Ecosense.EBS, Vvary = c(-4.5, 4.5), Dvary = c(-4.5, 4.5)) # assign the generated params to the Rsim.scenario object EBS_scene$params <- new_EBS_params"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.stanzas.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize list of age structured group (stanza) parameters for dynamic simulation ‚Äî rsim.stanzas","title":"Initialize list of age structured group (stanza) parameters for dynamic simulation ‚Äî rsim.stanzas","text":"Creates list stanza indices parameters used rsim.run.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.stanzas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize list of age structured group (stanza) parameters for dynamic simulation ‚Äî rsim.stanzas","text":"","code":"rsim.stanzas(Rpath.params, state, params)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.stanzas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize list of age structured group (stanza) parameters for dynamic simulation ‚Äî rsim.stanzas","text":"Rpath.params R object containing parameters needed create Rpath model.  generated either create.rpath.params()  read.rpath.params() functions. state List object state variables generated rsim.state. params Rsim parameter object generated rsim.params.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.stanzas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize list of age structured group (stanza) parameters for dynamic simulation ‚Äî rsim.stanzas","text":"list 21 objects: Nsplit, number model groups stanzas Nstanzas, numeric vector length Nsplit+1, leading 0 indexing followed number age groups model group stanzas EcopathCode, numeric matrix Rpath group numbers Nsplit+1 species rows Nstanzas+1 age group columns, first column row empty indexing Age1, numeric matrix age months first age group Nsplit+1 species rows, first column row empty indexing, second column earliest age months (0), third column max age months Age2, numeric matrix age months last age group Nsplit+1 species rows, first column row empty indexing, second column earliest age months, third column max age months baseWageS, numeric matrix rows monthly weight relative weight infinity (Winf) calculated rpath.stanzas Nsplit+1 species columns baseNageS, numeric matrix rows monthly numbers surviving, calculated rpath.stanzas Nsplit+1 species columns baseQageS, numeric matrix rows monthly consumption, calculated WageS^VBGFd rpath.stanzas Nsplit+1 species columns Wmat, numeric vector length Nsplit+1, leading 0 indexing followed weight 50% maturity relative Winf model group stanzas RecPower, numeric vector length Nsplit+1, leading 0 indexing followed recruitment power parameter model group stanzas recruits, numeric vector length Nsplit+1, leading 0 indexing followed recruits per spawner entered input rpath.stanzas VBGFd, numeric vector length Nsplit+1, leading 0 indexing followed von Bertalanffy d (default = 2/3) model group stanzas RzeroS, numeric vector length Nsplit+1, leading 0 indexing followed recruits per spawner entered input rpath.stanzas vBM, numeric vector length Nsplit+1, leading 0 indexing followed von Bertalanffy growth coefficient model group stanzas SplitAlpha, numeric matrix initial monthly (rows) growth coefficients model group stanzas (Nsplit+1 species columns) SpawnX, numeric vector length Nsplit+1, leading 0 indexing followed relative strength spawner-recruit relationship model group stanzas, currently set 10000, relationship SpawnEnergy, numeric vector length Nsplit+1, leading 0 indexing followed relative energy going recruitment rather growth model group stanzas, currently set 1 baseEggsStanza, numeric vector length Nsplit+1, leading 0 indexing followed initial estimate egg output model group stanzas baseSpawnBio, numeric vector length Nsplit+1, leading 0 indexing followed initial estimate spawning biomass (=egg output) model group stanzas RscaleSplit, numeric vector length Nsplit+1, leading 0 indexing followed adult juvenile metric scaling parameter model group stanzas, currently set 1 baseStanzaPred, numeric vector length NUM_GROUPS+1, base consumption (sum QageS*NageS) model group stanzas full model group order; 0s entered non-stanza groups","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.stanzas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize list of age structured group (stanza) parameters for dynamic simulation ‚Äî rsim.stanzas","text":"","code":"# Read in Rpath parameter file and generate model object Rpath <- rpath(REco.params) # Create default dynamic parameters from Rpath model Rsim.params <- rsim.params(Rpath) # Create state vectors with default values Rsim.state <- rsim.state(Rsim.params) # Create stanza object Rsim.stanzas <- rsim.stanzas(REco.params, Rsim.state, Rsim.params)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.state.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize starting state matrix for Rsim scenario ‚Äî rsim.state","title":"Initialize starting state matrix for Rsim scenario ‚Äî rsim.state","text":"Creates matrix starting state variables used Rsim, including initial biomass numbers group, well feeding time (Ftime). Default initial values: N = 0, Ftime = 1","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize starting state matrix for Rsim scenario ‚Äî rsim.state","text":"","code":"rsim.state(params)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize starting state matrix for Rsim scenario ‚Äî rsim.state","text":"params Rsim parameter object generated rsim.params.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize starting state matrix for Rsim scenario ‚Äî rsim.state","text":"S3 object class Rsim.state, list 3 objects: Biomass, numeric vector initial biomass biomass group N, numeric vector initial numbers biomass group Ftime, numeric vector initial feeding time parameter biomass group","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize starting state matrix for Rsim scenario ‚Äî rsim.state","text":"","code":"# Read in Rpath parameter file and generate model object Rpath <- rpath(AB.params) # Create dynamic parameters from Rpath model Rsim.params <- rsim.params(Rpath) # Create state vectors with default values Rsim.state <- rsim.state(Rsim.params)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.step.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to add a time step to an Rsim run ‚Äî rsim.step","title":"Function to add a time step to an Rsim run ‚Äî rsim.step","text":"Runs rsim.run appends output previous Rsim.output. Currently works Adams-Bashforth numerical integration method (AB).","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to add a time step to an Rsim run ‚Äî rsim.step","text":"","code":"rsim.step(Rsim.scenario, Rsim.output, method = \"AB\", year.end)"},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to add a time step to an Rsim run ‚Äî rsim.step","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario(). Rsim.output R object containing output rsim.run. method Numerical integration method. Either 'AB' Adams-Bashforth 'RK4' 4th order Runge-Kutta. year.end final year step interval","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/rsim.step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to add a time step to an Rsim run ‚Äî rsim.step","text":"Returns Rsim.output object.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/set.rsim.scene.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Rsim.scenario parameters ‚Äî set.rsim.scene","title":"Set Rsim.scenario parameters ‚Äî set.rsim.scene","text":"Modifies various parameters rsim.scenario() object. Parameters can adjusted using function : params,start_state, forcing,fishing,stanzas","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/set.rsim.scene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Rsim.scenario parameters ‚Äî set.rsim.scene","text":"","code":"set.rsim.scene(   Rsim.scenario,   params = NULL,   start_state = NULL,   forcing = NULL,   fishing = NULL,   stanzas = NULL )"},{"path":"https://noaa-edab.github.io/Rpath/reference/set.rsim.scene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Rsim.scenario parameters ‚Äî set.rsim.scene","text":"Rsim.scenario Scenario object contains rsim rates forcing functions generated rsim.scenario(). params Rsim parameter object generated rsim.params. start_state Rsim starting values object generated rsim.state() forcing Rsim forcing matrix object generated rsim.forcing() fishing Rsim fishing matrix object generated rsim.fishing() stanzas Rsim stanza parameters object generated rsim.stanzas()","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/set.rsim.scene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Rsim.scenario parameters ‚Äî set.rsim.scene","text":"Returns Rsim.scenario object new parameter.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/set.rsim.scene.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Rsim.scenario parameters ‚Äî set.rsim.scene","text":"","code":"# Read in Rpath parameter file and generate balanced model Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) stanzas <- rsim.stanzas(AB.params) Rsim.scenario.new <- set.rsim.scene(Rsim.scenario,stanzas=stanzas)"},{"path":"https://noaa-edab.github.io/Rpath/reference/stanzaplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot routine for Ecopath multistanzas ‚Äî stanzaplot","title":"Plot routine for Ecopath multistanzas ‚Äî stanzaplot","text":"Plots biomass composition multistanza groups Rpath.stanzas object.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/stanzaplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot routine for Ecopath multistanzas ‚Äî stanzaplot","text":"","code":"stanzaplot(   Rpath.params,   StanzaGroup,   line.cols = c(\"black\", \"green\", \"blue\", \"red\") )"},{"path":"https://noaa-edab.github.io/Rpath/reference/stanzaplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot routine for Ecopath multistanzas ‚Äî stanzaplot","text":"Rpath.params R object containing parameters needed create Rpath model.  generated either create.rpath.params()  read.rpath.params() functions. StanzaGroup Stanza group's name plotted.Valid values found `stanzas` field Rpath parameter file. line.cols vector four colors used represent population biomass, relative number, individual weights, stanza separation lines.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/stanzaplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot routine for Ecopath multistanzas ‚Äî stanzaplot","text":"Creates figure showing break biomass number per stanza.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/stanzaplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot routine for Ecopath multistanzas ‚Äî stanzaplot","text":"","code":"# Choose group with multiple stanzas params <- REco.params stanzaplot(params, StanzaGroup = \"Roundfish1\")"},{"path":"https://noaa-edab.github.io/Rpath/reference/summarize.for.webplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare food web model to plot ‚Äî summarize.for.webplot","title":"Prepare food web model to plot ‚Äî summarize.for.webplot","text":"Prepare summarize food web model plotting generating x-values node locations creating data frame trophic connections. function also used build custom plotting functions.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/summarize.for.webplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare food web model to plot ‚Äî summarize.for.webplot","text":"","code":"summarize.for.webplot(Rpath.obj, fleets = FALSE, box.order = NULL)"},{"path":"https://noaa-edab.github.io/Rpath/reference/summarize.for.webplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare food web model to plot ‚Äî summarize.for.webplot","text":"Rpath.obj Rpath model created rpath() function. fleets Logical value indicating whether include fishing fleets food web. box.order Vector box numbers change default plot order. Must include box numbers","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/summarize.for.webplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare food web model to plot ‚Äî summarize.for.webplot","text":"Returns list length 2. first element, pointmap data table functional group names, group numbers, type (0- living, 1- producer, 2- detritus, 3- fleet), trophic level, biomass, x.pos determines x coordinate node plotting. second element data table one row trophic connection, columns predator prey trophic levels, predator prey x.pos pointmap, predator prey group numbers (id).","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/webplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot routine for Ecopath food web ‚Äî webplot","title":"Plot routine for Ecopath food web ‚Äî webplot","text":"Plots food web associated Rpath object.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/webplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot routine for Ecopath food web ‚Äî webplot","text":"","code":"webplot(   Rpath.obj,   eco.name = attr(Rpath.obj, \"eco.name\"),   line.col = \"grey\",   highlight = NULL,   highlight.col = c(\"black\", \"red\", \"orange\"),   labels = FALSE,   label.pos = NULL,   label.num = FALSE,   label.cex = 1,   fleets = FALSE,   type.col = \"black\",   box.order = NULL )"},{"path":"https://noaa-edab.github.io/Rpath/reference/webplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot routine for Ecopath food web ‚Äî webplot","text":"Rpath.obj Rpath model created rpath(). eco.name Optional name ecosystem.  Default `eco.name` attribute rpath object created running rpath(). line.col color lines nodes food web. highlight Group number name highlight connections group. Valid values found `Group` field object created running rpath(). highlight.col Color connections highlighted group, vector length 3. Defaults black prey, red predator, orange fleet. labels Logical whether display group names.  TRUE label.pos = NULL, points plotted, just label names. label.pos position specifier labels.  Values 1, 2, 3, 4 indicate positions , left , , right points, respectively. null value cause labels plotted without points, assuming labels = TRUE. label.num Logical value indication whether group numbers used labels instead names. label.cex Numeric value relative size labels within plot. fleets Logical value indicating whether include fishing fleets food web plot. type.col color points corresponding types group.  Must length 1 4.  Color order consumers, primary producers, detrital, fleet groups. box.order Vector box numbers change default plot order.  Must include box numbers","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/webplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot routine for Ecopath food web ‚Äî webplot","text":"Returns plot visualization food web.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/webplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot routine for Ecopath food web ‚Äî webplot","text":"","code":"# Read in Rpath parameter file, generate and name model object Rpath.obj <- rpath(AB.params, eco.name = \"Anchovy Bay\") # Plot food web diagram with all groups labeled, including fleets webplot(Rpath.obj, labels = TRUE, fleets = TRUE)  # Plot food web diagram without labels, highlighting connections of cod group webplot(Rpath.obj, highlight = \"cod\",fleets = TRUE)"},{"path":"https://noaa-edab.github.io/Rpath/reference/write.Rpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Write function for Rpath food web object ‚Äî write.Rpath","title":"Write function for Rpath food web object ‚Äî write.Rpath","text":"Outputs basic parameters mortalities rpath() object .csv .RData file.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/write.Rpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write function for Rpath food web object ‚Äî write.Rpath","text":"","code":"write.Rpath(x, file = NA, morts = F)"},{"path":"https://noaa-edab.github.io/Rpath/reference/write.Rpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write function for Rpath food web object ‚Äî write.Rpath","text":"x Rpath model object generated rpath(). file file name resultant file.  Need specify \".csv\" \".RData\". morts Logical value whether output basic parameters mortalities.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/write.Rpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write function for Rpath food web object ‚Äî write.Rpath","text":"Writes list object file basic parameters mortalities Rpath object. morts = F, output reflects basic parameters mass-balanced model, namely: Group Vector group names type Vector group types: 0 = consumer, 1 = producer, 2 = detritus, 3 = fishery TL Vector trophic level group, calculated based mass balance Biomass Vector biomass values modeled group PB Vector production:biomass ratios modeled group QB Vector consumption:biomass ratios modeled group EE Vector ecotrophic efficiency values modeled group GE Vector gross efficiency values (production:comsumption ratios) modeled group Removals Vector total fishery removals modeled group morts = T, output reflects calculated mortality values group. number columns vary based many predators model. Group Vector group names M0 Vector natural mortality group. Natural mortality = PB * (1-EE) Fmort Vector fishing mortality group M2.XX Vector predation mortality, XX name predator group","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/write.Rpath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write function for Rpath food web object ‚Äî write.Rpath","text":"","code":"if (FALSE) { # \\dontrun{ # Read in Rpath parameter file, generate model object x <- rpath(AB.params) # Saves basic model parameters for all groups to the root directory of users project write.Rpath(x, file = \"output.csv\", morts = F) # Calculates natural mortality (M0), fishing mortality by fleet, and predation mortality by predator (M2) on each group # Writes output to an Rdata file in the root directory of users project write.Rpath(x, file = here::here(\"output.RData\"), morts = T) } # }"},{"path":"https://noaa-edab.github.io/Rpath/reference/write.Rsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Write function for Rsim run ‚Äî write.Rsim","title":"Write function for Rsim run ‚Äî write.Rsim","text":"Outputs starting biomass, ending biomass, catch .csv .Rdata file.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/write.Rsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write function for Rsim run ‚Äî write.Rsim","text":"","code":"write.Rsim(Rsim.output, file = NA)"},{"path":"https://noaa-edab.github.io/Rpath/reference/write.Rsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write function for Rsim run ‚Äî write.Rsim","text":"Rsim.output object created rsim.run() function. file file name resultant file.  Need specify \".csv\" \".RData\".","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/write.Rsim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write function for Rsim run ‚Äî write.Rsim","text":"Writes list object file start end biomass catch per group Rpath.sim object. Group Vector group names StartBio Vector Biomass values simulation start EndBio Vector Biomass values simulation end BioES Vector ratio end:start Biomass values StartCatch Vector Catch values simulation start EndCatch Vector Catch values simulation end CatchES Vector ratio end:start Catch values","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/reference/write.Rsim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write function for Rsim run ‚Äî write.Rsim","text":"","code":"# Read in Rpath parameter file and generate model object Rpath <- rpath(AB.params) # Create a 50 yr Rsim scenario Rsim.scenario <- rsim.scenario(Rpath, AB.params, years = 1:50) # Run the Rsim simulation Rsim.output <- rsim.run(Rsim.scenario, method = \"RK4\", years = 1:50) # Save summary output to a .csv file write.Rsim(Rsim.output, file = \"output.csv\")"},{"path":"https://noaa-edab.github.io/Rpath/reference/write.rpath.params.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Rpath parameters to .csv files ‚Äî write.rpath.params","title":"Write Rpath parameters to .csv files ‚Äî write.rpath.params","text":"Creates series .csv files Rpath.params object.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/write.rpath.params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Rpath parameters to .csv files ‚Äî write.rpath.params","text":"","code":"write.rpath.params(Rpath.params, eco.name, path = \"\")"},{"path":"https://noaa-edab.github.io/Rpath/reference/write.rpath.params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Rpath parameters to .csv files ‚Äî write.rpath.params","text":"Rpath.params R object containing Rpath parameters. likely created using create.rpath.params() read.rpath.params(). eco.name ecosystem name included file names. path location output files.","code":""},{"path":"https://noaa-edab.github.io/Rpath/reference/write.rpath.params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Rpath parameters to .csv files ‚Äî write.rpath.params","text":"Outputs series .csv files named provided eco.name  parameters represent.  example model parameters named  \"eco.name_model.csv\".","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/Rpath/news/index.html","id":"rpath-100","dir":"Changelog","previous_headings":"","what":"Rpath 1.0.0","title":"Rpath 1.0.0","text":"Fix group parameter reference adjust.scenario Fix Force bymort double-counting bug ecosim.cpp rsim step dyt fix ecosim_multistep Removed old datasets Switch single double operators ecosim.cpp Added examples functions Updated documentation/website Added package hex Added bibliography file Created issue templates Added contributors guideline code conduct","code":""},{"path":"https://noaa-edab.github.io/Rpath/news/index.html","id":"rpath-091","dir":"Changelog","previous_headings":"","what":"Rpath 0.9.1","title":"Rpath 0.9.1","text":"New function documentation added","code":""},{"path":"https://noaa-edab.github.io/Rpath/news/index.html","id":"rpath-090","dir":"Changelog","previous_headings":"","what":"Rpath 0.9.0","title":"Rpath 0.9.0","text":"Added Ecosense routines vignettes Added example ecosystems Added Unit Tests Fixed bug stanza month calculations affected species","code":""},{"path":"https://noaa-edab.github.io/Rpath/news/index.html","id":"rpath-080","dir":"Changelog","previous_headings":"","what":"Rpath 0.8.0","title":"Rpath 0.8.0","text":"Added bioenergetic code adjust functions can now supply values individual months rather years","code":""},{"path":"https://noaa-edab.github.io/Rpath/news/index.html","id":"rpath-070","dir":"Changelog","previous_headings":"","what":"Rpath 0.7.0","title":"Rpath 0.7.0","text":"Added CI workflows Added/updated documentation (pkgdown) Stanza changes","code":""},{"path":"https://noaa-edab.github.io/Rpath/news/index.html","id":"rpath-060","dir":"Changelog","previous_headings":"","what":"Rpath 0.6.0","title":"Rpath 0.6.0","text":"Added BAB multistanzas adjust.scenario can applied multiple groups rather one time. BB Biomass CC Catch GS Unassim Catch Landings Recruits r R WWa QageS surv survive_L B Biomass Pedigree param list ‚Äúbyx‚Äù functions ‚ÄúForcedX‚Äù EFFORT ForcedEffort CATCH FRATE ForcedCatch ForcedFRate Change default values scramble flags 1 0. Zero indicating flag , 1 indicating .","code":""},{"path":"https://noaa-edab.github.io/Rpath/news/index.html","id":"rpath-051","dir":"Changelog","previous_headings":"","what":"Rpath 0.5.1","title":"Rpath 0.5.1","text":"Fixed mixotroph diet calculations MTI calculation.","code":""},{"path":"https://noaa-edab.github.io/Rpath/news/index.html","id":"rpath-050","dir":"Changelog","previous_headings":"","what":"Rpath 0.5.0","title":"Rpath 0.5.0","text":"Initial Release Acknowledgement package submission CRAN along manuscript (see release notes) Fixed bug adjust.fishing one value can applied range sim.years Fixed bug original scenario file stanza files overwritten C code. Fixed bug egg stanza calculation Wmat matrix indexed wrong inthe calculation. Updated adjustment functions. Renamed parameter ‚Äúyear‚Äù ‚Äúsim.year‚Äù. Removed ‚Äúgear‚Äù parameter adjust fishing group never group/fleet combo needs specified. Fixed indexing issue rsim.step issue rsim.run modifying initial rsim.scenario data table. ecosim scenario objects now parameterized vector years labeling, e.g.¬†years=c(1970,2017), single number years. rsim.run run years specified (e.g.¬†years=c(2013,2014) save outputs two year slots). Haven‚Äôt carried change multistep function. Labeling fishing/forcing matrices (columns labelled species, rows labeled years (annual matrices, labeling monthly rows) addition force_bybio (biomass forced stay input value) Added gear specific catch tracking new extract.node function. Fixed issue consumption calculations due addition diet import diet matrix.","code":""}]
